{"version":3,"sources":["./src/app/classes/login.ts","./src/app/classes/student.ts","./src/app/components/exam-period/exam-period.component.ts","./src/app/components/exam-period/exam-period.component.html","./src/app/shared_service/login.service.ts","./src/app/components/register-student/register-student.component.ts","./src/app/components/register-student/register-student.component.html","./src/app/shared_service/exam.service.ts","./src/app/components/enrollment/enrollment.component.ts","./src/app/components/enrollment/enrollment.component.html","./src/app/components/payment-form/payment-form.component.ts","./src/app/components/payment-form/payment-form.component.html","./src/environments/environment.ts","./src/app/classes/teacher.ts","./src/app/components/course-form/course-form.component.ts","./src/app/components/course-form/course-form.component.html","./src/app/shared_service/enrollment.service.ts","./src/app/shared_service/payment.service.ts","./src/app/components/student-form/student-form.component.ts","./src/app/components/student-form/student-form.component.html","./src/app/components/exam-information-form/exam-information-form.component.ts","./src/app/components/exam-information-form/exam-information-form.component.html","./src/app/components/teacher/teacher.component.ts","./src/app/components/teacher/teacher.component.html","./src/app/shared_service/course.service.ts","./src/app/components/register-teacher/register-teacher.component.ts","./src/app/components/register-teacher/register-teacher.component.html","./src/app/components/exam-date/exam-date.component.ts","./src/app/components/exam-date/exam-date.component.html","./src/app/components/exam-period-form/exam-period-form.component.ts","./src/app/components/exam-period-form/exam-period-form.component.html","./src/app/components/exam-registration/exam-registration.component.ts","./src/app/components/exam-registration/exam-registration.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared_service/exam-period-service.service.ts","./src/app/components/exam-form/exam-form.component.ts","./src/app/components/exam-form/exam-form.component.html","./src/app/classes/exam.ts","./src/app/components/student-page/student-page.component.ts","./src/app/components/student-page/student-page.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/shared_service/documents.service.ts","./src/app/components/teacher-form/teacher-form.component.ts","./src/app/components/teacher-form/teacher-form.component.html","./src/app/components/exam/exam.component.ts","./src/app/components/exam/exam.component.html","./src/app/app.module.ts","./src/app/components/document-form/document-form.component.ts","./src/app/components/document-form/document-form.component.html","./src/app/classes/payment.ts","./src/app/components/documents/documents.component.ts","./src/app/components/documents/documents.component.html","./src/app/shared_service/teacher.service.ts","./src/app/components/teacher-page/teacher-page.component.ts","./src/app/components/teacher-page/teacher-page.component.html","./src/app/classes/documents.ts","./src/app/components/payment/payment.component.ts","./src/app/components/payment/payment.component.html","./src/app/shared_service/student.service.ts","./src/app/classes/authority.ts","./src/app/classes/exam-period.ts","./src/app/components/register-admin/register-admin.component.ts","./src/app/components/register-admin/register-admin.component.html","./src/app/classes/enrollment.ts","./src/app/components/student/student.component.ts","./src/app/components/student/student.component.html","./src/app/components/course/course.component.ts","./src/app/components/course/course.component.html","./src/main.ts","./src/app/classes/course.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Authority } from './authority';\nimport { Student } from './student';\nimport { Teacher } from './teacher';\n\nexport class Login implements LoginInterface{\n\tpublic id: number;\n\tpublic username: string;\n\tpublic password: string;\n    public authority: Authority;\n    public student: Student;\n    public teacher: Teacher;\n    \n\t\n\tconstructor(loginCfg:LoginInterface)\n\t{\t\n\t\tthis.id = loginCfg.id;\n\t\tthis.username = loginCfg.username;\n\t\tthis.password = loginCfg.password;\n        this.authority = loginCfg.authority;\t\n        this.student = loginCfg.student;\n\t\tthis.teacher = loginCfg.teacher;\t\t\t\n\t}\n}\n\ninterface LoginInterface{\n\tid?: number;\n\tusername: string;\n\tpassword: string;\n    authority: Authority;\n    student: Student;\n    teacher: Teacher;\n}","export class Student implements StudentInterface{\n\tpublic id: number;\n\tpublic cardNumber: string;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\t\t\n\tconstructor(studentCfg:StudentInterface)\n\t{\t\n\t\tthis.id = studentCfg.id;\n\t\tthis.cardNumber = studentCfg.cardNumber;\n\t\tthis.firstName = studentCfg.firstName;\n\t\tthis.lastName = studentCfg.lastName;\t\t\n\t}\n}\n\ninterface StudentInterface{\n\tid?: number;\n\tcardNumber: string;\n\tfirstName: string;\t\n\tlastName: string;\n}","import { Component, OnInit } from '@angular/core';\nimport {ExamPeriod} from '../../classes/exam-period';\nimport {ExamPeriodServiceService} from '../../shared_service/exam-period-service.service';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-exam-period',\n  templateUrl: './exam-period.component.html',\n  styleUrls: ['./exam-period.component.css']\n})\nexport class ExamPeriodComponent implements OnInit {\n\n  public examperiods: ExamPeriod[];\n  subscription: Subscription\n\n  constructor(private _examPeriodSevice: ExamPeriodServiceService, private _router: Router) {\n    this.subscription = _examPeriodSevice.RegenerateData$.subscribe(() =>\n    this.getExamPeriods()\n    )}\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getExamPeriods();\n  }\n\n  getExamPeriods() {\n    this._examPeriodSevice.getExamPeriods().then(examper =>\n      this.examperiods = examper);\n  }\n  deleteExamPeriod(examperiod: ExamPeriod): void {\n    this._examPeriodSevice.deleteExamPeriod(examperiod.id).then(\n      () => this.getExamPeriods()\n    );\n  }\n  updatePeriod(examperiod:ExamPeriod){\n    this._examPeriodSevice.setter(examperiod);\n    this._router.navigate(['/exam-period-form']);\n\n  }\n  newExamPeriod(){\n    let exam = new ExamPeriod({ \n      name: '',\n      startDate:null,\n      endDate:null\n    });\n    this._examPeriodSevice.setter(exam);\n    this._router.navigate(['/exam-period-form']);\n  }\n\n}\n","<div class=\"container\">\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Ispitni rok</th>\n            <th>Datum pocetka</th>\n            <th>Datum zavrsetka</th>\n            <th></th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let examperiod of examperiods\">\n                <td>{{examperiod.name}}</td>\n                <td>{{examperiod.startDate | date: 'dd/MM/yyyy'}}</td>\n                <td>{{examperiod.endDate | date: 'dd/MM/yyyy'}}</td>\n                <td><button (click)=\"deleteExamPeriod(examperiod)\" class=\"btn btn-danger\">Obriši</button></td>\n                <td><button (click)=\"updatePeriod(examperiod)\" class=\"btn btn-primary\">Izmeni</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"newExamPeriod()\">Dodaj ispitni rok</button>\n    </div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Subject} from 'rxjs';\nimport { Login } from '../classes/login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private baseUrl = 'http://localhost:8080/api/user';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private login: Login;\n  private RegenerateData = new Subject<void>();\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) { }\n\n  getLogin(username: String, password: String): Promise<Login> {\n    const url = `${this.baseUrl}/login/${username}/${password}`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Login)\n        .catch(this.handleError);\n}\n\nregisterStudent(username: String, password: String, cardNumber: String, firstName: String, lastName: String): Promise<Login> {\n  const url = `${this.baseUrl}/registerStudent/${username}/${password}/${cardNumber}/${firstName}/${lastName}`;\n  return this._http\n      .post(url, { headers: this.headers })\n      .toPromise()\n      .catch(this.handleError);\n}\n\nregisterTeacher(username: String, password: String, firstName: String, lastName: String, teacherRank: String): Promise<Login> {\n  const url = `${this.baseUrl}/registerTeacher/${username}/${password}/${firstName}/${lastName}/${teacherRank}`;\n  return this._http\n      .post(url, { headers: this.headers })\n      .toPromise()\n      .catch(this.handleError);\n}\n\nregisterAdmin(username: String, password: String): Promise<Login> {\n  const url = `${this.baseUrl}/registerAdmin/${username}/${password}`;\n  return this._http\n      .post(url, { headers: this.headers })\n      .toPromise()\n      .catch(this.handleError);\n}\n\nannounceChange() {\n  this.RegenerateData.next();\n}\nhandleError(error: any): Promise<any> {\n  console.error(\"Error... \", error);\n  return Promise.reject(error.message || error);\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Login } from '../../classes/login';\nimport { LoginService } from \"../../shared_service/login.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Authority } from 'src/app/classes/authority';\nimport { Student } from 'src/app/classes/student';\nimport { Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register-student',\n  templateUrl: './register-student.component.html',\n  styleUrls: ['./register-student.component.css']\n})\nexport class RegisterStudentComponent implements OnInit {\n\n  login: Login;\n\n  constructor(private route: ActivatedRoute, private loginService: LoginService,\n   private location: Location, private _router: Router) {\n    this.login = new Login({\n      username: null,\n      password: null,\n      authority: new Authority({\n        name: 'STUDENT'\n      }),\n      student: new Student({\n        cardNumber: null,\n        firstName: null,\n        lastName: null\n      }),\n      teacher: null\n    });\n\n }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n  }\n\n  registerStudent(): void {\n    if(this.login.username === null){\n      alert(\"Unesite korisničko ime novog studenta!\");\n    }else if(this.login.password === null){\n      alert(\"Unesite lozinku novog studenta!\")\n    }else if(this.login.student.cardNumber === null){\n      alert(\"Unesite indeks novog studenta!\")\n    }else if(this.login.student.firstName === null){\n      alert(\"Unesite ime novog studenta!\")\n    }else if(this.login.student.lastName === null){\n      alert(\"Unesite prezime novog studenta!\")\n    }\n    else {\n    this.loginService.registerStudent(this.login.username, this.login.password, this.login.student.cardNumber,\n      this.login.student.firstName, this.login.student.lastName)\n      .then(login => {\n        this.loginService.announceChange();\n        window.location.href = \"/\";\n      });\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    <h3>Add new Student</h3>\n  </div>\n  <div>\n\n    <div class=\"form group\">\n        <label for=\"username\">Korisnicko ime</label>\n        <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"login.username\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"password\">Lozinka</label>\n        <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"login.password\">\n    </div>\n\n    <div class=\"form group\">\n        <label for=\"cardNumber\">Broj Indeksa</label>\n        <input type=\"text\" name=\"cardNumber\" class=\"form-control\" [(ngModel)]=\"login.student.cardNumber\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"firstName\">Ime Studenta</label>\n        <input type=\"text\" name=\"firstName\" class=\"form-control\" [(ngModel)]=\"login.student.firstName\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"lastName\">Prezime Studenta</label>\n        <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"login.student.lastName\">\n    </div>\n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" (click)=\"registerStudent()\">OK</button>\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\n  </div> \n","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport {Exam} from '../classes/exam';\nimport { Subject} from 'rxjs';\n\n@Injectable()\nexport class ExamService {\n  private baseUrl = 'http://localhost:8080/api/exams';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private RegenerateData = new Subject<void>();\n  private exam: Exam;\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getExams(): Promise<Exam[]> {\n    const url = `${this.baseUrl}/all`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Exam[])\n        .catch(this.handleError);\n}\ngetExam(id): Promise<Exam> {\n  const url = `${this.baseUrl}/${id}`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam)\n      .catch(this.handleError);\n}\neditExam(exam:Exam): Promise<Exam> {\n  return this._http\n      .put(this.baseUrl, JSON.stringify(exam), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as Exam)\n      .catch(this.handleError);\n} \n  addExam(exam: Exam): Promise<Exam> {\n    return this._http\n        .post(this.baseUrl, JSON.stringify(exam), { headers: this.headers })\n        .toPromise()\n        .then(res => res.json() as Exam)\n        .catch(this.handleError);\n}\n\nexamRegistration(exam: Exam, studentId: number): Promise<Exam> {\n  const url = `${this.baseUrl}/${studentId}/examRegistration`;\n  return this._http\n      .post(url, JSON.stringify(exam), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as Exam)\n      .catch(this.handleError);\n}\n\ndeleteExam(examId: number): Promise<{}> {\n  const url = `${this.baseUrl}/${examId}`;\n  return this._http\n      .delete(url)\n      .toPromise()\n      .catch(this.handleError);\n}\n\nexamDate(exam:Exam): Promise<Exam> {\n  const url = `${this.baseUrl}/examDate`;\n  return this._http\n      .put(url, JSON.stringify(exam), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as Exam)\n      .catch(this.handleError);\n} \n\nannounceChange() {\n  this.RegenerateData.next();\n}\nsetter(exam: Exam){\nthis.exam = exam;\n}\ngetter(){\nreturn this.exam;\n}\n  handleError(error: any): Promise<any> {\n    console.error(\"Error... \", error);\n    return Promise.reject(error.message || error);\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Enrollment } from '../../classes/enrollment';\nimport { Student } from '../../classes/student';\nimport { Course } from '../../classes/course';\nimport { CourseService } from '../../shared_service/course.service';\nimport { StudentService } from '../../shared_service/student.service';\nimport { EnrollmentService } from \"../../shared_service/enrollment.service\";\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbDate, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@Component({\n  selector: 'app-enrollment',\n  templateUrl: './enrollment.component.html',\n  styleUrls: ['./enrollment.component.css']\n}) \nexport class EnrollmentComponent implements OnInit {\n\n\n  enrollment: Enrollment;\n  students: Student[];\n\n  // for date picker values\n  ngbStartDate: NgbDateStruct;\n  ngbEndDate: NgbDateStruct;\n\n  constructor(private route: ActivatedRoute, private courseService: CourseService,\n    private studentService: StudentService, private enrollmentService: EnrollmentService,\n    private location: Location, private _router: Router) {\n    this.enrollment = new Enrollment({\n      startDate: null,\n      endDate: null,\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      }),\n      course: new Course({\n        name: ''\n      })\n    });\n\n  }\n\n  ngOnInit() {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.route.queryParams.subscribe(params =>\n      this.courseService.getCourse(params['courseId'])\n        .then(course => \n          this.enrollment.course = course \n        ));\n\n    this.studentService.getStudents().then(students =>\n      this.students = students);\n  }\n\n  add(): void {\n    if (this.ngbStartDate === undefined){\n      alert(\"Niste uneli datum pocetka ispitnog roka\")\n    }else if (this.ngbEndDate === undefined){\n      alert(\"Niste uneli datum kraja ispitnog roka\")\n    }else if(this.enrollment.student.cardNumber===''){\n      alert(\"Izaberite studenta\")\n    }\n    else{\n    this.enrollment.startDate = new Date(this.ngbStartDate.year, this.ngbStartDate.month-1, this.ngbStartDate.day);\n    this.enrollment.endDate = new Date(this.ngbEndDate.year, this.ngbEndDate.month-1, this.ngbEndDate.day);\n    if (this.enrollment.startDate > this.enrollment.endDate){\n      alert(\"Datum pocetka mora biti pre datuma kraja\");\n    }else{\n    this.enrollmentService.addEnrollment(this.enrollment)\n      .then(enrollment => {\n        this.enrollmentService.announceChange();\n        this.goBack();\n      });\n    }\n  }\n}\n\n  goBack(): void {\n    this.location.back();\n  }\n\n\n}\n","<div>\n    <h3>Enroll students in course {{enrollment.course.name}} </h3>\n  </div>\n  <div>\n  \n      <div class=\"form-group\">\n        <select class=\"form-control\" [(ngModel)]=\"enrollment.student\">\n              <option *ngFor=\"let s of students\" [ngValue]=\"s\">{{s.firstName}} {{s.lastName}} {{s.cardNumber}}</option>\n            </select>\n      </div>\n  \n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp1\" [(ngModel)]=\"ngbStartDate\" \n            ngbDatepicker #d1=\"ngbDatepicker\">\n          <button class=\"input-group-addon\" (click)=\"d1.toggle()\" type=\"button\">\n          <i class=\"fa fa-calendar\" style=\"width: 1.2rem; height: 1rem; cursor: pointer;\"> </i> \n        </button>\n        </div>\n      </div>\n  \n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp2\" [(ngModel)]=\"ngbEndDate\" \n            ngbDatepicker #d2=\"ngbDatepicker\">\n          <button class=\"input-group-addon\" (click)=\"d2.toggle()\" type=\"button\">\n         <i class=\"fa fa-calendar\" style=\"width: 1.2rem; height: 1rem; cursor: pointer;\"> </i> \n        </button>\n        </div>\n      </div> \n  \n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\">OK</button>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">Cancel</button>\n  </div> ","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Payment } from '../../classes/payment';\nimport { Student } from '../../classes/student';\nimport { StudentService } from \"../../shared_service/student.service\";\nimport { PaymentService } from \"../../shared_service/payment.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-payment-form',\n  templateUrl: './payment-form.component.html',\n  styleUrls: ['./payment-form.component.css']\n})\nexport class PaymentFormComponent implements OnInit {\n\n  payment: Payment;\n  students: Student[];\n\n  constructor(private route: ActivatedRoute, private studentService: StudentService,\n    private paymentService: PaymentService, private location: Location, private _router: Router) {\n   this.payment = new Payment({\n    svrhaUplate: null,\n    vrednostUplate: null,\n    date: new Date(),\n    student: new Student({\n      cardNumber: '',\n      firstName: '',\n      lastName: ''\n    })\n   });\n\n }\n\n ngOnInit() {\n\n  if (JSON.parse(localStorage.getItem('user')) == null) {\n    this._router.navigate(['/']);\n  } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n    this._router.navigate(['/teacher-page']);\n  } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n    this._router.navigate(['/student-page']);\n  }\n\n  this.studentService.getStudents().then(students =>\n    this.students = students);\n}\n\nadd(): void {\n  if(this.payment.svrhaUplate === null){\n    alert(\"Niste uneli svrhu uplate!\");\n  }else if(this.payment.vrednostUplate === null){\n    alert(\"Unesite vrednost uplate\");\n  } else if(this.payment.student.firstName===\"\"){\n    alert(\"Izaberite studenta\");\n  } else if(isNaN(this.payment.vrednostUplate)){\n    alert(\"Vrednost uplate mora biti broj\");\n  } else if(this.payment.vrednostUplate < 1){\n    alert(\"Vrednost uplate mora biti veća od 0\");\n  } else {\n  this.paymentService.addPayment(this.payment)\n    .then(payment => {\n      this.paymentService.announceChange();\n      this.goBack();\n    });\n  }\n}\n\ngoBack(): void {\n  this.location.back();\n}\n\n}\n","<div>\n    <h3>Add new Payment</h3>\n  </div>\n  <div>\n\n    <div class=\"form group\">\n        <label for=\"svrhaUplate\">Svrha Uplate</label>\n        <input type=\"text\" name=\"svrhaUplate\" class=\"form-control\" [(ngModel)]=\"payment.svrhaUplate\">\n    </div>\n    <div class=\"form group\">\n        <label for=\"svrhaUplate\">Vrednost Uplate</label>\n        <input type=\"text\" name=\"vrednostUplate\" class=\"form-control\" [(ngModel)]=\"payment.vrednostUplate\">\n    </div>\n  \n      <div class=\"form-group\">\n        <label for=\"student\">Student</label>\n        <select class=\"form-control\" [(ngModel)]=\"payment.student\">\n              <option *ngFor=\"let s of students\" [ngValue]=\"s\">{{s.firstName}} {{s.lastName}} {{s.cardNumber}}</option>\n            </select>\n      </div>\n  \n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\">OK</button>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">Cancel</button>\n  </div> \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Teacher implements TeacherInterface{\n    public id: number;\npublic firstName: string;\npublic lastName: string;\npublic teacherRank: string;\nconstructor(teacherCfg: TeacherInterface)\n{\nthis.id = teacherCfg.id;\nthis.firstName = teacherCfg.firstName;\nthis.lastName = teacherCfg.lastName;\nthis.teacherRank = teacherCfg.teacherRank;\n}\n\n}\n\ninterface TeacherInterface{\nid?: number;\nfirstName: string;\nlastName: string;\nteacherRank: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {CourseService} from '../../shared_service/course.service';\nimport {EnrollmentService} from '../../shared_service/enrollment.service';\nimport {ExamService} from '../../shared_service/exam.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {Enrollment} from '../../classes/enrollment';\nimport {Course} from '../../classes/course';\nimport {Router} from '@angular/router';\nimport { Subject} from 'rxjs';\nimport { Location } from '@angular/common';\n\n\nimport 'rxjs';\nimport { Login } from 'src/app/classes/login';\nimport { Exam } from 'src/app/classes/exam';\n\n@Component({\n  selector: 'app-course-form',\n  templateUrl: './course-form.component.html',\n  styleUrls: ['./course-form.component.css']\n})\nexport class CourseFormComponent implements OnInit {\n  examspass:Exam[];\n  public user: Login;\n  course: Course = new Course({ // if we add a new course, create an empty course\n    name: '',\n  });\n\n  enrollments: Enrollment[];\n\n  constructor(private _courseService: CourseService, private _router: Router, \n    private _enrollmentService: EnrollmentService, private route: ActivatedRoute, private location: Location,private examService:ExamService) {\n      _enrollmentService.RegenerateData$.subscribe(() =>\n      this.getEnrollments()\n    );\n    examService.RegenerateData$.subscribe(() =>\n    this.getExams()\n    );\n     }\n  private RegenerateData = new Subject<void>();\n  \n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n    \n    this.course = this._courseService.getter();\n    if (this.course !== undefined){\n    this._courseService.getCourseEnrollments(this.course.id).then(enrollments =>\n      this.enrollments = enrollments);\n    this._courseService.getCourseExams(this.course.id).then(exams =>\n        this.examspass = exams);\n    }\n  }\n\n  private getEnrollments(): void {\n    this._courseService.getCourseEnrollments(this.course.id).then(enrollments =>\n      this.enrollments = enrollments);\n  }\n  gotoInfo(examid:number): void {\n    this._router.navigate(['/exam-info'], { queryParams: { examId: examid } });\n  }\n  private getExams(): void {\n    this._courseService.getCourseExams(this.course.id).then(exams =>\n      this.examspass = exams);\n  }\n  processForm(){\n    if (this.course.id === undefined){\n      if(this.course.name == \"\"){\n        alert(\"Niste uneli naziv kursa\");\n      }\n      else{  \n        this._courseService.addCourse(this.course)\n        .then(course => {\n          this._courseService.announceChange();\n         this._router.navigate(['courses']);\n      });\n    }\n    }else{\n       if(this.course.name == \"\"){\n          alert(\"Niste uneli naziv kursa\");\n        }\n        else{\n      this._courseService.editCourse(this.course)\n      .then(course => {\n        this._courseService.announceChange();\n        this._router.navigate(['courses']);\n      });\n    }\n    }\n  }\n  gotoAddEnrollment(): void {\n    this._router.navigate(['/enrollment-form'], { queryParams: { courseId: this.course.id } });\n  }\n\n  deleteEnrollment(enrollmentId: number): void {\n    this._enrollmentService.deleteEnrollment(enrollmentId).then(\n      () => this.getEnrollments()\n    );\n  }\n}\n","<div class=\"container\">\n\n    <form (ngSubmit)=\"processForm()\">\n        <div class=\"form group\">\n            <label for=\"name\">Naziv</label>\n            <input *ngIf=\"user.authority.name == 'ADMIN'\" type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"course.name\">\n            <input *ngIf=\"user.authority.name == 'NASTAVNIK'\" type=\"text\" disabled name=\"name\" class=\"form-control\" [(ngModel)]=\"course.name\">\n        </div>\n        <input *ngIf=\"user.authority.name == 'ADMIN'\" type=\"submit\" value=\"save\" class=\"btn btn-success\">\n    </form>\n    <br>\n    <div *ngIf=\"course.id\">\n        <div>\n          <h3>Studenti</h3>\n          <button *ngIf=\"user.authority.name == 'ADMIN'\" type=\"button\" class=\"btn btn-primary\" aria-label=\"Add\" (click)=\"gotoAddEnrollment()\" >\n            Dodaj\n          </button>\n        </div>\n        <table class=\"table table-bordered\">\n          <thead>\n            <th>Ime i Prezime</th>\n            <th>Broj Indeksa</th>\n            <th>Pocetak Kursa</th>\n            <th>Zavrsetak Kursa</th>\n        </thead>\n          <tr *ngFor=\"let enrollment of enrollments\">\n            <td>\n              {{enrollment.student.firstName+\" \"+enrollment.student.lastName}} \n            </td>\n            <td class=\"cardNumber\">{{enrollment.student.cardNumber}}</td>\n            <td>{{enrollment.startDate | date: 'dd/MM/yyyy'}}</td>\n            <td>{{enrollment.endDate | date: 'dd/MM/yyyy'}}</td>\n            <td *ngIf=\"user.authority.name == 'ADMIN'\">\n              <button type=\"button\" class=\"btn btn-primary right\" aria-label=\"Delete\" (click)=\"deleteEnrollment(enrollment.id)\">\n                Obrisi\n              </button>\n            </td>\n          </tr>\n        </table>\n        <br>\n        <div>\n          <h3>Ispiti</h3>\n        </div>\n          <table class=\"table table-bordered\">\n            <thead>\n              <th>Naziv Predmeta</th>\n              <th>Datum</th>\n              <th>Vreme Ispita</th>\n              <th>Ime i Prezime</th>\n              <th>Broj Indeksa</th>\n              <th>Informacije</th>\n          </thead>\n            <tr *ngFor=\"let exam of examspass\">\n              <td>\n                {{exam.course.name}}\n              </td>\n              <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n              <td>{{exam.date | date: 'HH:mm'}}</td>\n              <td>{{exam.student.firstName +' '+ exam.student.lastName}}</td>\n              <td class=\"cardNumber\">{{exam.student.cardNumber}}</td>\n              <td>\n                <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                  Upisi Bodove\n                </button>\n              </td>\n            </tr>\n          </table>\n          <br>\n      </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Enrollment } from '../classes/enrollment';\n\nimport 'rxjs';\n\n@Injectable()\nexport class EnrollmentService {\n    private enrollment: Enrollment;\n    private baseUrl = 'http://localhost:8080/api/enrollment';\n    private headers = new Headers({ 'Content-Type': 'application/json' });\n    private RegenerateData = new Subject<void>();\n    RegenerateData$ = this.RegenerateData.asObservable();\n    constructor(private _http: Http) { }\n\n    announceChange() {\n        this.RegenerateData.next();\n    }\n\n    \n    addEnrollment(enrollment: Enrollment): Promise<Enrollment> {\n        return this._http\n            .post(this.baseUrl, JSON.stringify(enrollment), { headers: this.headers })\n            .toPromise()\n            .then(res => res.json() as Enrollment)\n            .catch(this.handleError);\n    }\n\n    deleteEnrollment(enrollmentId: number): Promise<{}> {\n        const url = `${this.baseUrl}/${enrollmentId}`;\n        return this._http\n            .delete(url)\n            .toPromise()           \n            .catch(this.handleError);\n    }\n\n    handleError(error: any): Promise<any> {\n        console.error(\"Error... \", error);\n        return Promise.reject(error.message || error);\n    }\n}","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Subject} from 'rxjs';\nimport {Payment} from '../classes/payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  private baseUrl = 'http://localhost:8080/api/payments';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private payment: Payment;\n  private RegenerateData = new Subject<void>();\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getPayments(): Promise<Payment[]> {\n    const url = `${this.baseUrl}/all`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Payment[])\n        .catch(this.handleError);\n}\n  getPayment(id: Number): Promise<Payment> {\n    const url = `${this.baseUrl}/${id}`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Payment)\n        .catch(this.handleError);\n}\n  deletePayment(payment: Payment): Promise<{Payment}> {\n    const url = `${this.baseUrl}/${payment.id}`;\n    return this._http\n        .delete(url)\n        .toPromise()\n        .catch(this.handleError);\n}\n  addPayment(payment: Payment): Promise<Payment> {\n    return this._http\n        .post(this.baseUrl, JSON.stringify(payment), { headers: this.headers })\n        .toPromise()\n        .then(res => res.json() as Payment)\n        .catch(this.handleError);\n}\n\ngetAllPaymentsSum(): Promise<number> {\n  const url = `${this.baseUrl}/allSum`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as number)\n      .catch(this.handleError);\n}\n \n  announceChange() {\n    this.RegenerateData.next();\n}\n  setter(payment: Payment){\n      this.payment = payment;\n    }\n  getter(){\n    return this.payment;\n  }\n  handleError(error: any): Promise<any> {\n    console.error(\"Error... \", error);\n    return Promise.reject(error.message || error);\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Student } from 'src/app/classes/student';\nimport {Router}  from '@angular/router';\nimport {StudentService}  from '../../shared_service/student.service';\nimport {ExamService}  from '../../shared_service/exam.service';\nimport { Subject} from 'rxjs';\nimport { Enrollment } from '../../classes/enrollment';\nimport { Documents } from '../../classes/documents';\nimport { Exam } from 'src/app/classes/exam';\nimport { Payment } from 'src/app/classes/payment';\nimport { PaymentService } from 'src/app/shared_service/payment.service';\n\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css']\n})\nexport class StudentFormComponent implements OnInit {\n  public student: Student;\n  enrollments: Enrollment[];\n  documents: Documents[];\n  payments: Payment[];\n  exams: Exam[];\n  examspass:Exam[];\n  nextexams:Exam[];\n  public sum: number;\n\n  constructor(private _studentService: StudentService, private _router: Router,private _examService: ExamService,\n    private _paymentService: PaymentService) {\n  }\n  private RegenerateData = new Subject<void>();\n  ngOnInit() {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.student = this._studentService.getter();\n    console.log(this.student.firstName);\n    if (this.student !== undefined){\n    this._studentService.getStudentEnrollments(this.student.id).then(enrollments =>\n      this.enrollments = enrollments);\n\n    this._studentService.getStudentExams(this.student.id).then(exams =>\n        this.exams = exams);\n\n    this._studentService.getStudentExamsPass(this.student.id).then(exams =>\n        this.examspass = exams);\n\n    this._studentService.getStudentNextExams(this.student.id).then(exams =>\n        this.nextexams = exams);\n\n    this._studentService.getStudentDocuments(this.student.id).then(documents =>\n        this.documents = documents);\n\n    this._studentService.getStudentPayments(this.student.id).then(payments =>\n        this.payments = payments);\n\n    this._studentService.getAllPaymentsSum(this.student.id).then(sum =>\n        this.sum = sum);\n    }\n  }\n  deleteExam(examId:number){\n    this._examService.deleteExam(examId).then(\n      () => this.getExams()\n    );\n  }\n  getExams() {\n    this._studentService.getStudentNextExams(this.student.id).then(exams =>\n      this.nextexams  = exams);\n  }\n\n  gotoInfo(examid:number): void {\n    this._router.navigate(['/exam-info'], { queryParams: { examId: examid } });\n  }\n\n  processForm(){\n    if (this.student.id === undefined){\n      if(this.student.cardNumber == \"\"){\n        alert(\"Niste uneli indeks studenta\");\n      }else if(this.student.firstName == \"\"){\n        alert(\"Niste uneli ime studenta\");\n      }else if(this.student.lastName == \"\"){\n        alert(\"Niste uneli prezime studenta\");\n      }\n      else{\n      this._studentService.addStudent(this.student)\n      .then(student => {\n        this._studentService.announceChange();\n        this._router.navigate(['']);\n      });\n    }\n    }else{\n      if(this.student.cardNumber == \"\"){\n        alert(\"Niste uneli indeks studenta\");\n      }else if(this.student.firstName == \"\"){\n        alert(\"Niste uneli ime studenta\");\n      }else if(this.student.lastName == \"\"){\n        alert(\"Niste uneli prezime studenta\");\n      }\n      else{\n      this._studentService.editStudent(this.student)\n      .then(student => {\n        this._studentService.announceChange();\n        this._router.navigate(['']);\n      });\n    }\n    }\n  }\n}\n\n","\n<div class=\"container\">\n<div>\n    <form (ngSubmit)=\"processForm()\">\n        <div class=\"form group\">\n            <label for=\"cardNumber\">Indeks</label>\n            <input type=\"text\" name=\"cardNumber\" class=\"form-control\" [(ngModel)]=\"student.cardNumber\">\n        </div>\n        <div class=\"form group\">\n            <label for=\"firstName\">Ime</label>\n            <input type=\"text\" name=\"fname\" class=\"form-control\" [(ngModel)]=\"student.firstName\">\n        </div>\n        <div class=\"form group\">\n            <label for=\"lastName\">Prezime</label>\n            <input type=\"text\" name=\"lname\" class=\"form-control\" [(ngModel)]=\"student.lastName\">\n        </div>\n        <br>\n        <div>\n            <div>\n                <h3>Kursevi od korisnika</h3>\n            </div>\n            <table class=\"table table-bordered\">\n              <tr *ngFor=\"let enrollment of enrollments\">\n                <td>\n                  {{enrollment.course.name}}\n                </td>\n              </tr>\n            </table>\n          </div> \n          <div *ngIf=\"student.id\">\n            <div>\n              <h3>Rezultati ispita</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of examspass\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <div>\n            <h3>Obrada ispita...</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of exams\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <div>\n            <h3>Ispiti u narednom periodu</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Odjava ispita</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of nextexams\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-primary right\" aria-label=\"Delete\" (click)=\"deleteExam(exam.id)\">\n                    Odjavi ispit\n                  </button>\n                </td>\n\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          </div>\n          <br>\n          <div>\n              <div>\n                  <h3>Dokumenti korisnika</h3>\n              </div>\n              <table class=\"table table-bordered\">\n                <tr *ngFor=\"let document of documents\">\n                  <td>\n                    {{document.naziv}}\n                  </td>\n                </tr>\n              </table>\n\n            <div>\n                <h3>Uplate korisnika</h3>\n            </div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Svrha Uplate</th>\n                <th>Vrednost Uplate</th>\n                <th>Vreme Uplate</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let payment of payments\">\n                <td>{{payment.svrhaUplate}}</td>\n                <td>{{payment.vrednostUplate}}</td>\n                <td>{{payment.date | date:'dd/MM/yyyy HH:mm'}}</td>\n              </tr>\n              <tr>\n                <td>Ukupno</td>\n                <td id=\"sum\">{{sum}}</td>\n                <td></td> \n            </tr>\n            </tbody>\n            </table>\n            </div> \n          <input type=\"submit\" value=\"save\" class=\"btn btn-success\">\n    </form>\n</div>\n<div>\n    <br>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Course } from 'src/app/classes/course';\nimport { Exam } from 'src/app/classes/exam';\nimport { ExamPeriod } from 'src/app/classes/exam-period';\nimport { Login } from 'src/app/classes/login';\nimport { Student } from 'src/app/classes/student';\nimport { ExamService } from 'src/app/shared_service/exam.service';\n\n@Component({\n  selector: 'app-exam-information-form',\n  templateUrl: './exam-information-form.component.html',\n  styleUrls: ['./exam-information-form.component.css']\n})\nexport class ExamInformationFormComponent implements OnInit {\n  exam: Exam;\n  student:Student;\n  public user: Login;\n  \n\n  constructor(private _examService: ExamService, private _router: Router,private route: ActivatedRoute ) {\n    this.exam = new Exam({\n      examPoints: 0,\n      labPoints: 0,\n      date: null,\n      course: new Course({\n        name: ''\n      }),\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      }),\n      examPeriod: new ExamPeriod({\n        name: '',\n        startDate: null,\n        endDate: null,\n      }),\n   });\n   }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n   \n    }\n\n    this.exam = this._examService.getter();\n    this.route.queryParams.subscribe(params =>\n      this._examService.getExam(params['examId'])\n        .then(exam =>\n          this.exam = exam\n        )); \n    }\n    saveExamPoints(exam:Exam){\n      if(exam.examPoints+exam.labPoints>100){\n        alert(\"Maximalan broj poena je 100\")\n      }else if(exam.examPoints+exam.labPoints==0){\n        alert(\"Unesite broj bodova\")\n      }\n      else{\n      this._examService.editExam(exam).then(course => {\n        this._examService.announceChange();\n        if(this.user.authority.name==\"ADMIN\"){\n        this._router.navigate(['/courses']);\n        }else if((this.user.authority.name==\"NASTAVNIK\")){\n          this._router.navigate(['/teacher-page']);\n        }\n      });\n    }\n  }\n\n}\n","<div>\n    <h3>Informacije o ispitu</h3>\n  </div>\n  <div>\n    <div class=\"form-group\">\n      <label for=\"student\">Datum</label><br>\n      <label id=\"datum\">{{exam.date  | date: 'dd/MM/yyyy HH:mm'}}</label>\n      <!-- <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.date\" disabled> -->\n    </div>\n    <div class=\"form group\">\n        <label for=\"naziv\">Student</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.student.firstName+' '+ exam.student.firstName\" disabled>\n    </div>\n      <div class=\"form-group\">\n        <label for=\"student\">Predmet</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.course.name\" disabled>\n      </div>\n      <div class=\"form-group\" *ngIf=\"user.authority.name != 'NASTAVNIK'\">\n        <label for=\"student\">Bodovi sa Ispita</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.examPoints\" disabled>\n      </div>\n      <div class=\"form-group\" *ngIf=\"user.authority.name != 'NASTAVNIK'\">\n        <label for=\"student\">Bodovi sa Predispitnih Obaveza</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.labPoints\" disabled>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"student\">Ispitni Rok</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.examPeriod.name\" disabled>\n      </div>\n      <div class=\"form-group\"  *ngIf=\"user.authority.name != 'STUDNET'\">\n        <label  *ngIf=\"user.authority.name != 'STUDENT'\"  for=\"student\">Bodovi sa Ispita</label>\n        <input  *ngIf=\"user.authority.name != 'STUDENT'\" type=\"number\" max=\"100\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.examPoints\">\n      </div>\n      <div class=\"form-group\">\n        <label  *ngIf=\"user.authority.name != 'STUDENT'\"  for=\"student\">Bodovi sa Predispitnih Obaveza</label>\n        <input  *ngIf=\"user.authority.name != 'STUDENT'\" type=\"number\" max=\"100\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"exam.labPoints\">\n      </div>\n      <button (click)=\"saveExamPoints(exam)\" *ngIf=\"user.authority.name != 'STUDENT'\" class=\"btn btn-success\">Save</button>\n\n  \n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport {TeacherService} from '../../shared_service/teacher.service';\nimport {Teacher} from '../../classes/teacher';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n\n  public teachers:Teacher[];\n  subscription: Subscription;\n\n\n  constructor(private _teacherService:TeacherService, private _router: Router) {\n    this.subscription = _teacherService.RegenerateData$.subscribe(() =>\n    this.getTeachers()  );\n  }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name === 'NASTAVNIK') {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name === 'STUDENT') {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getTeachers();\n  }\n\n  getTeachers(): void {\n    this._teacherService.getTeachers().then(students =>\n      this.teachers = students);\n  }\n  deleteTeacher(teacher){ \n    this._teacherService.deleteTeacher(teacher.id).then(\n      () => this.getTeachers()\n    );\n    this._teacherService.deleteTeacher(teacher.id).then(\n      () => this.getTeachers()\n    );\n  }\n\n  updateTeacher(teacher){\n    this._teacherService.setter(teacher);\n    this._router.navigate(['/teacher-form']);\n\n  }\n  newTeacher(){\n    this._router.navigate(['/register-teacher']);\n  }\n\n}","<div class=\"container\">\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Ime</th>\n            <th>Prezime</th>\n            <th>Uloga</th>\n            <th></th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let teacher of teachers\">\n                <td>{{teacher.firstName}}</td>\n                <td>{{teacher.lastName}}</td>\n                <td>{{teacher.teacherRank}}</td>\n                <td><button (click)=\"deleteTeacher(teacher)\" class=\"btn btn-danger\">Obriši</button></td>\n                <td><button (click)=\"updateTeacher(teacher)\" class=\"btn btn-primary\">Izmeni</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <button (click)=\"newTeacher()\" class=\"btn btn-success\">Novi profesor</button>\n    </div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {Course} from '../classes/course'\nimport {Enrollment} from '../classes/enrollment'\nimport { Observable, Subject} from 'rxjs';\nimport { Exam } from '../classes/exam';\n\n@Injectable()\nexport class CourseService {\n  private baseUrl = 'http://localhost:8080/api/courses';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private RegenerateData = new Subject<void>();\n  private course: Course;\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http, private http: HttpClient) {}\n\n  getCourses(): Promise<Course[]> {\n    return this._http.get(this.baseUrl)\n        .toPromise()\n        .then(response =>\n            response.json() as Course[])\n        .catch(this.handleError);\n}\n  getCourse(id: number): Promise<Course> {\n    const url = `${this.baseUrl}/${id}`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Course)\n        .catch(this.handleError);\n}\n  deleteCourse(id: Number): Promise<{}> {\n    const url = `${this.baseUrl}/${id}`;\n    return this._http\n        .delete(url)\n        .toPromise()\n        .catch(this.handleError);\n}\n  createCourse(){\n    return this._http.post(this.baseUrl, this.options).pipe(map((response: Response) => response.json()));\n  }\n  addCourse(course: Course): Promise<Course> {\n    return this._http\n        .post(this.baseUrl, JSON.stringify(course), { headers: this.headers })\n        .toPromise()\n        .then(res => res.json() as Course)\n        .catch(this.handleError);\n}\n    editCourse(course: Course): Promise<Course> {\n      return this._http\n          .put(this.baseUrl, JSON.stringify(course), { headers: this.headers })\n          .toPromise()\n          .then(res => res.json() as Course)\n          .catch(this.handleError);\n  }\n\n  getCourseEnrollments(courseId: number): Promise<Enrollment[]> {\n    const url = `${this.baseUrl}/${courseId}/students`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Enrollment[])\n        .catch(this.handleError);\n}\ngetCourseExams(courseId: number): Promise<Exam[]> {\n  const url = `${this.baseUrl}/${courseId}/examspasscourse`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam[])\n      .catch(this.handleError);\n      \n}\n\ngetExamPeriodCourses(studentId: number, examPeriodId: number) : Observable<Course[]> {\n  return this.http.get<Course[]>(`${this.baseUrl}/${studentId}/${examPeriodId}`);\n}\n\n  announceChange() {\n    this.RegenerateData.next();\n}\nsetter(course: Course){\n  this.course = course;\n}\ngetter(){\n  return this.course;\n  }\n    handleError(error: any): Promise<any> {\n      console.error('Error... ', error);\n      return Promise.reject(error.message || error);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Login } from '../../classes/login';\nimport { LoginService } from \"../../shared_service/login.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Authority } from 'src/app/classes/authority';\nimport { Teacher } from 'src/app/classes/teacher';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register-teacher',\n  templateUrl: './register-teacher.component.html',\n  styleUrls: ['./register-teacher.component.css']\n})\nexport class RegisterTeacherComponent implements OnInit {\n\n  login: Login;\n  public teacherRank = '';\n\n  constructor(private route: ActivatedRoute, private loginService: LoginService,\n   private location: Location, private _router: Router) {\n    this.login = new Login({\n      username: null,\n      password: null,\n      authority: new Authority({\n        name: 'NASTAVNIK'\n      }),\n      student: null,\n      teacher: new Teacher({\n        firstName: null,\n        lastName: null,\n        teacherRank: null\n      })\n    });\n\n }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n  }\n\n  onChange(event) {\n    this.teacherRank = event.target.options[event.target.options.selectedIndex].text;\n  }\n\n  registerTeacher(): void {\n    if(this.login.username === null){\n      alert(\"Unesite korisničko ime novog predavaca!\");\n    }else if(this.login.password === null){\n      alert(\"Unesite lozinku novog predavaca!\")\n    }else if(this.login.teacher.firstName === null){\n      alert(\"Unesite ime novog predavaca!\")\n    }else if(this.login.teacher.lastName === null){\n      alert(\"Unesite prezime novog predavaca!\")\n    }else if(this.login.teacher.teacherRank === null){\n      alert(\"Unesite ulogu novog predavaca!\")\n    }\n    else {\n    this.login.teacher.teacherRank = this.teacherRank;\n    this.loginService.registerTeacher(this.login.username, this.login.password,\n      this.login.teacher.firstName, this.login.teacher.lastName, this.login.teacher.teacherRank)\n      .then(login => {\n        this.loginService.announceChange();\n        this.goBack();\n      });\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    <h3>Add new Teacher</h3>\n  </div>\n  <div>\n\n    <div class=\"form group\">\n        <label for=\"username\">Korisnicko ime</label>\n        <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"login.username\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"password\">Lozinka</label>\n        <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"login.password\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"firstName\">Ime Profesora</label>\n        <input type=\"text\" name=\"firstName\" class=\"form-control\" [(ngModel)]=\"login.teacher.firstName\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"lastName\">Prezime Profesora</label>\n        <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"login.teacher.lastName\">\n    </div>\n\n    <div class=\"form group\">\n        <label for=\"teacherRank\">Uloga</label>\n        <select class=\"form-control\" [(ngModel)]=\"login.teacher.teacherRank\" (change)=\"onChange($event)\" [ngModelOptions]=\"{standalone: true}\">\n            <option [value]=\"1\">Profesor</option>\n            <option [value]=\"2\">Asistent</option>\n            <option [value]=\"3\">Demonstrator</option>\n          </select>\n    </div>\n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" (click)=\"registerTeacher()\">OK</button>\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\n  </div> \n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { Course } from 'src/app/classes/course';\nimport { Exam } from 'src/app/classes/exam';\nimport { CourseService } from 'src/app/shared_service/course.service';\nimport { ExamService } from 'src/app/shared_service/exam.service';\n\n@Component({\n  selector: 'app-exam-date',\n  templateUrl: './exam-date.component.html',\n  styleUrls: ['./exam-date.component.css']\n})\nexport class ExamDateComponent implements OnInit {\n\n  courses: Course[];\n  exam: Exam;\n\n  constructor(private route: ActivatedRoute, private courseService: CourseService,\n    private examService: ExamService, private location: Location, private _router: Router) {\n    this.exam = this.examService.getter();\n    }\n\n  ngOnInit(): void {\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n  }\n\n  edit(): void {\n    if(this.exam.date === null){\n      alert(\"Niste uneli datum i vreme ispita!\");\n    } else {\n    this.examService.examDate(this.exam)\n      .then(exam => {\n        this.examService.announceChange();\n        this.goBack();\n      });\n    }\n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    <h3>Add Exam Date</h3>\n  </div>\n  <div>\n    <div class=\"form-group\">\n        <label for=\"examDate\">Vreme Odrzavanja Ispita</label>\n          <div class=\"input-group\">\n            <input type=\"datetime-local\" class=\"form-control\" placeholder=\"mm/dd/yyyy hh:mm\" name=\"examDate\" [(ngModel)]=\"exam.date\">\n          </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"edit()\">OK</button>\n  </div> \n","import { Component, OnInit } from '@angular/core';\nimport { ExamPeriod } from 'src/app/classes/exam-period';\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ActivatedRoute } from '@angular/router';\nimport { ExamPeriodServiceService } from 'src/app/shared_service/exam-period-service.service';\nimport {Router} from '@angular/router';\nimport 'rxjs';\nimport { Exam } from 'src/app/classes/exam';\nimport { ExamService } from 'src/app/shared_service/exam.service';\nimport { Subject} from 'rxjs';\n\n@Component({\n  selector: 'app-exam-period-form',\n  templateUrl: './exam-period-form.component.html',\n  styleUrls: ['./exam-period-form.component.css']\n})\n\nexport class ExamPeriodFormComponent implements OnInit {\n  examperiod: ExamPeriod;\n  exams : Exam[];\n  // for date picker values\n  ngbStartDate: NgbDateStruct;\n  ngbEndDate: NgbDateStruct;\n\n  constructor(private _router: Router, private examPeriodService: ExamPeriodServiceService, private _examService: ExamService) {\n      this.examperiod = new ExamPeriod(\n        {\n          name: '',\n          startDate: null,\n          endDate: null\n        }\n      )\n      _examService.RegenerateData$.subscribe(() =>\n      this.getExam())\n    }\n    private RegenerateData = new Subject<void>();\n  ngOnInit(){\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.examperiod = this.examPeriodService.getter();\n    if (this.examperiod !== undefined){\n      this.examPeriodService.getExamPeriodExams(this.examperiod.id).then(exams =>\n        this.exams = exams);\n      }\n  }\n  private getExam(): void {\n    this.examPeriodService.getExamPeriodExams(this.examperiod.id).then(exams =>\n      this.exams = exams);\n  }\n  processForm(){\n    if (this.ngbStartDate === undefined){\n      alert(\"Niste uneli datum pocetka ispitnog roka\")\n    }else if (this.ngbEndDate === undefined){\n      alert(\"Niste uneli datum kraja ispitnog roka\")\n    }else{\n    this.examperiod.startDate = new Date(this.ngbStartDate.year, this.ngbStartDate.month - 1, this.ngbStartDate.day);\n    this.examperiod.endDate = new Date(this.ngbEndDate.year, this.ngbEndDate.month - 1, this.ngbEndDate.day);\n    if (this.examperiod.id === undefined){\n      if (this.examperiod.startDate > this.examperiod.endDate){\n        alert(\"Datum pocetka mora biti pre datuma kraja\");\n      }else if (this.examperiod.name == \"\"){\n        alert(\"Mora se uneti naziv ispitnog roka\");\n      }\n      else{\n      this.examPeriodService.addExamPeriod(this.examperiod)\n      .then(course => {\n        this.examPeriodService.announceChange();\n        this._router.navigate(['exam-period']);\n      });\n    }\n    }else{\n      if (this.examperiod.startDate > this.examperiod.endDate){\n        alert(\"Datum pocetka mora biti pre datuma kraja\");\n      }else if (this.examperiod.name == \"\"){\n        alert(\"Mora se uneti naziv ispitnog roka\");\n      }\n      else{\n      this.examPeriodService.editExamPeriod(this.examperiod)\n      .then(examperiod => {\n        this.examPeriodService.announceChange();\n        this._router.navigate(['exam-period']);\n      });\n    }\n    }\n  }\n  }\n  gotoAddExam(): void {\n    this._router.navigate(['/exam-form'], { queryParams: { examPeriodId: this.examperiod.id } });\n  }\n\n  deleteExam(examId: number): void {\n    this._examService.deleteExam(examId).then(\n      () => this.getExam()\n    );\n  }\n\n}\n","<div class=\"container\">\n    <form (ngSubmit)=\"processForm()\">\n        <div class=\"form group\">\n            <label for=\"name\">Naziv ispitnog roka</label>\n            <input type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"examperiod.name\">\n\n            <div class=\"form-group\">\n              <label for=\"name\">Pocetak ispitnog roka</label>\n                <div class=\"input-group\">\n                  <input type=\"date\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp1\" [(ngModel)]=\"ngbStartDate\" \n                    ngbDatepicker #d1=\"ngbDatepicker\">\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"name\">Kraj ispitnog roka</label>\n                <div class=\"input-group\">\n                  <input type=\"date\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp2\" [(ngModel)]=\"ngbEndDate\" \n                    ngbDatepicker #d2=\"ngbDatepicker\">\n                </div>\n              </div>\n        </div>\n        <input type=\"submit\" value=\"save\" class=\"btn btn-success\">\n    </form>\n    <div *ngIf=\"examperiod.id\">\n      <div>\n        <h3>Prijavljeni ispiti</h3>\n      </div>\n      <table class=\"table table-bordered\">\n        <tr *ngFor=\"let exam of exams\">\n          <td>\n            {{exam.student.firstName}} {{exam.student.lastName}} {{exam.course.name}} {{exam.date | date: 'dd.MM.yyyy'}}\n          </td>\n          <td>\n            <button type=\"button\" class=\"btn btn-primary right\" aria-label=\"Delete\" (click)=\"deleteExam(exam.id)\">\n              Obrisi\n            </button>\n          </td>\n        </tr>\n      </table>   \n    </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { Course } from 'src/app/classes/course';\nimport { Exam } from 'src/app/classes/exam';\nimport { CourseService } from 'src/app/shared_service/course.service';\nimport { ExamService } from 'src/app/shared_service/exam.service';\n\n@Component({\n  selector: 'app-exam-registration',\n  templateUrl: './exam-registration.component.html',\n  styleUrls: ['./exam-registration.component.css']\n})\nexport class ExamRegistrationComponent implements OnInit {\n\n  courses: Course[] = null;\n  exam: Exam;\n  showCourse = false;\n\n  constructor(private route: ActivatedRoute, private courseService: CourseService,\n    private examService: ExamService, private location: Location, private _router: Router) {\n    this.exam = new Exam({\n      examPoints: 0,\n      labPoints: 0,\n      date: null,\n      course: null,\n      student: null,\n      examPeriod: JSON.parse(localStorage.getItem('examPeriod'))\n    });\n  }\n\n  ngOnInit(): void {\n    this.courseService.getExamPeriodCourses(JSON.parse(localStorage.getItem('user')).studentid, JSON.parse(localStorage.getItem('examPeriod')).id).subscribe(course =>\n      this.courses = course)\n      this.showCourse = true;\n  }\n\n  add(): void {\n    if (this.exam.course.name === null) {\n      alert(\"Niste uneli predmet!\");\n    } else {\n      this.examService.examRegistration(this.exam, JSON.parse(localStorage.getItem('user')).studentid)\n        .then(exam => {\n          this.examService.announceChange();\n          this.goBack();\n        });\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<h3>Prijava ispita</h3>\n<div class=\"form-group\">\n    <label for=\"predmet\">Predmet</label>\n    <select *ngIf = 'courses !== null' class=\"form-control\" [(ngModel)]=\"exam.course\">\n          <option *ngFor=\"let c of courses\" [ngValue]=\"c\">{{c.name}}</option>\n        </select>\n  </div>\n\n  <div class=\"modal-footer\">\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\">OK</button>\n    </div> \n","import { Component, OnInit } from '@angular/core';\nimport { Login } from 'src/app/classes/login';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'angularTSEOProject';\n  public user: Login;\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  logout() {\n    localStorage.setItem('user',null);\n  }\n}\n","<div id=\"wrapper\">\n<nav class=\"navbar navbar-toggleable-md navbar-light bg-faded\">\n  <button *ngIf=\"user != null && user.authority.name == 'ADMIN'\" id=\"dropDownButton\" class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <a id=\"startPage\" class=\"navbar-brand\" *ngIf=\"user != null\" (click)=\"logout()\" href=\"#\">Logout <i class=\"fas fa-sign-out-alt\"></i></a>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul id=\"listDropDown\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLink]=\"['/students']\">Studenti</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/courses']\">Kursevi</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/teachers']\">Nastavnici</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/exam-period']\">Ispitni Rokovi</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/documents']\">Dokumenti</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/payments']\">Uplate</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/exams']\">Ispiti</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/register-admin']\">Kreiraj Admina</a>\n      </li>\n     </ul>    \n  </div>\n</nav>\n\n<div style=\"margin-top: 100px\" class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport {ExamPeriod} from '../classes/exam-period';\nimport { Subject} from 'rxjs';\nimport { Exam } from '../classes/exam';\n\n@Injectable()\nexport class ExamPeriodServiceService {\n  private baseUrl = 'http://localhost:8080/api/examPeriods';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private RegenerateData = new Subject<void>();\n  private examPeriod: ExamPeriod;\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getExamPeriods(): Promise<ExamPeriod[]> {\n    return this._http.get(this.baseUrl+\"/all\")\n        .toPromise()\n        .then(response =>\n            response.json() as ExamPeriod[])\n        .catch(this.handleError);\n}\ngetExamPeriod(id: number): Promise<ExamPeriod> {\n  const url = `${this.baseUrl}/${id}`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as ExamPeriod)\n      .catch(this.handleError);\n}\ndeleteExamPeriod(id: Number): Promise<{}> {\n  const url = `${this.baseUrl}/${id}`;\n  return this._http\n      .delete(url)\n      .toPromise()\n      .catch(this.handleError);\n}\naddExamPeriod(ep: ExamPeriod): Promise<ExamPeriod> {\n  return this._http\n      .post(this.baseUrl, JSON.stringify(ep), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as ExamPeriod)\n      .catch(this.handleError);\n}\neditExamPeriod(ep: ExamPeriod): Promise<ExamPeriod> {\n  return this._http\n      .put(this.baseUrl, JSON.stringify(this.examPeriod), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as ExamPeriod)\n      .catch(this.handleError);\n}\ngetExamPeriodExams(examperiodId: number): Promise<Exam[]> {\n  const url = `${this.baseUrl}/${examperiodId}/exams`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam[])\n      .catch(this.handleError);\n}\n\ngetNextExamPeriods(): Promise<ExamPeriod[]> {\n  return this._http.get(this.baseUrl+\"/nextExamPeriods\")\n      .toPromise()\n      .then(response =>\n          response.json() as ExamPeriod[])\n      .catch(this.handleError);\n}\n\nannounceChange() {\n  this.RegenerateData.next();\n}\nsetter(ep: ExamPeriod){\nthis.examPeriod = ep;\n}\ngetter(){\nreturn this.examPeriod;\n}\n  handleError(error: any): Promise<any> {\n    console.error(\"Error... \", error);\n    return Promise.reject(error.message || error);\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Exam } from '../../classes/exam';\nimport { Student } from '../../classes/student';\nimport { Course } from '../../classes/course';\nimport { ExamPeriod } from '../../classes/exam-period';\nimport { StudentService } from \"../../shared_service/student.service\";\nimport { ExamService } from \"../../shared_service/exam.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { CourseService } from 'src/app/shared_service/course.service';\nimport { ExamPeriodServiceService } from 'src/app/shared_service/exam-period-service.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-exam-form',\n  templateUrl: './exam-form.component.html',\n  styleUrls: ['./exam-form.component.css']\n})\nexport class ExamFormComponent implements OnInit {\n\n  exam: Exam;\n  students: Student[];\n  courses: Course[];\n  examPeriods: ExamPeriod[];\n\n  constructor(private route: ActivatedRoute, private studentService: StudentService,\n    private examService: ExamService, private courseService: CourseService,\n     private examPeriodService: ExamPeriodServiceService, private location: Location, private _router: Router) {\n   this.exam = new Exam({\n      examPoints: 0,\n      labPoints: 0,\n      date: null,\n      course: new Course({\n        name: ''\n      }),\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      }),\n      examPeriod: new ExamPeriod({\n        name: '',\n        startDate: null,\n        endDate: null,\n      }),\n   });\n\n }\n\n ngOnInit() {\n\n  if (JSON.parse(localStorage.getItem('user')) == null) {\n    this._router.navigate(['/']);\n  } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n    this._router.navigate(['/teacher-page']);\n  } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n    this._router.navigate(['/student-page']);\n  }\n\n  this.studentService.getStudents().then(students =>\n    this.students = students);\n\n  this.courseService.getCourses().then(courses =>\n    this.courses = courses);\n\n  this.examPeriodService.getExamPeriods().then(examPeriods =>\n    this.examPeriods = examPeriods);\n}\n\nadd(): void {\n  if(this.exam.date === null){\n    alert(\"Niste uneli datum i vreme ispita!\");\n  } else if(this.exam.course.name ===\"\"){\n    alert(\"Niste izabrali predmet!\");\n  } else if(this.exam.examPeriod.name ===\"\"){\n    alert(\"Niste izabrali ispitni rok!\");\n  } else {\n  this.examService.addExam(this.exam)\n    .then(exam => {\n      this.examService.announceChange();\n      this.goBack();\n    });\n  }\n}\n\ngoBack(): void {\n  this.location.back();\n}\n\n}\n","<div>\n    <h3>Add new Exam</h3>\n  </div>\n  <div>\n\n    <div class=\"form-group\">\n        <label for=\"course\">Predmet</label>\n        <select class=\"form-control\" [(ngModel)]=\"exam.course\">\n              <option *ngFor=\"let c of courses\" [ngValue]=\"c\">{{c.name}}</option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"examPeriod\">Ispitni Rok</label>\n        <select class=\"form-control\" [(ngModel)]=\"exam.examPeriod\">\n              <option *ngFor=\"let e of examPeriods\" [ngValue]=\"e\">{{e.name}}</option>\n        </select>\n      </div>\n\n    <div class=\"form-group\">\n        <label for=\"examDate\">Vreme Odrzavanja Ispita</label>\n          <div class=\"input-group\">\n            <input type=\"datetime-local\" class=\"form-control\" placeholder=\"mm/dd/yyyy hh:mm\" name=\"examDate\" [(ngModel)]=\"exam.date\">\n          </div>\n    </div>\n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\">OK</button>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">Cancel</button>\n  </div> \n\n","import { Course } from './course';\nimport { ExamPeriod } from './exam-period';\nimport { Student } from './student';\n\nexport class Exam {\n    public id: number;\n    public examPoints: number;\n    public labPoints: number;\n    public date: Date;\n    public course: Course;\n    public student: Student;\n    public examPeriod: ExamPeriod;\n\n    constructor(examCfg: ExamInterface)\n\t{\n  this.id = examCfg.id;\n  this.examPeriod = examCfg.examPeriod;\n  this.labPoints = examCfg.labPoints;\n  this.date = examCfg.date;\n  this.course = examCfg.course;\n  this.student = examCfg.student;\n  this.examPeriod = examCfg.examPeriod;\n\t}\n}\n\ninterface ExamInterface{\n\tid?: number;\n    examPoints: number;\n    labPoints: number;\n    date: Date;\n    course: Course;\n    student: Student;\n    examPeriod: ExamPeriod;\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from 'src/app/shared_service/student.service';\nimport { Student} from 'src/app/classes/student';\nimport { Router } from '@angular/router';\nimport { Enrollment } from '../../classes/enrollment';\nimport { Documents } from '../../classes/documents';\nimport { Exam } from 'src/app/classes/exam';\nimport { Payment } from 'src/app/classes/payment';\nimport { PaymentService } from 'src/app/shared_service/payment.service';\nimport { ExamPeriod } from 'src/app/classes/exam-period';\nimport { ExamPeriodServiceService } from 'src/app/shared_service/exam-period-service.service';\nimport { ExamService } from 'src/app/shared_service/exam.service';\n\n@Component({\n  selector: 'app-student-page',\n  templateUrl: './student-page.component.html',\n  styleUrls: ['./student-page.component.css']\n})\nexport class StudentPageComponent implements OnInit {\n  public student:Student;\n  enrollments: Enrollment[];\n  documents: Documents[];\n  payments: Payment[];\n  exams: Exam[];\n  examspass:Exam[];\n  nextexams:Exam[];\n  nextExamPeriods: ExamPeriod[];\n  examPeriod: ExamPeriod;\n  public sum: number;\n  constructor(private studentService: StudentService, private _router: Router, private examPeriodService: ExamPeriodServiceService,\n    private examService: ExamService) {\n    this.student = new Student({\n      cardNumber: '',\n      firstName: '',\n      lastName: ''\n    })\n  }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    }\n\n    localStorage.setItem('examPeriod',null);\n\n    this.studentService.getStudentEnrollments(JSON.parse(localStorage.getItem('user')).studentid).then(enrollments =>\n      this.enrollments = enrollments);\n\n    this.studentService.getStudentExams(JSON.parse(localStorage.getItem('user')).studentid).then(exams =>\n        this.exams = exams);\n\n    this.studentService.getStudentExamsPass(JSON.parse(localStorage.getItem('user')).studentid).then(exams =>\n        this.examspass = exams);\n\n    this.studentService.getStudentNextExams(JSON.parse(localStorage.getItem('user')).studentid).then(exams =>\n        this.nextexams = exams);\n\n    this.studentService.getStudentDocuments(JSON.parse(localStorage.getItem('user')).studentid).then(documents =>\n        this.documents = documents);\n\n    this.studentService.getStudentPayments(JSON.parse(localStorage.getItem('user')).studentid).then(payments =>\n        this.payments = payments);\n\n    this.studentService.getAllPaymentsSum(JSON.parse(localStorage.getItem('user')).studentid).then(sum =>\n        this.sum = sum);\n\n    this.examPeriodService.getNextExamPeriods().then(examPers => this.nextExamPeriods = examPers);\n\n    this.student = this.studentService.getter();   \n\n    this.studentService.getStudent(JSON.parse(localStorage.getItem('user')).studentid).then(student =>\n      this.student = student);\n  }\n\n  gotoInfo(examid:number): void {\n    this._router.navigate(['/exam-info'], { queryParams: { examId: examid } });\n  }\n\n  prijavaIspita(examPeriodId:number): void {\n    this.examPeriodService.getExamPeriod(examPeriodId).then(examPeriod =>{\n      localStorage.setItem('examPeriod', JSON.stringify(examPeriod));\n    });\n    this._router.navigate(['/exam-registration'], { queryParams: { examPeriodId: examPeriodId } });\n  }\n\n  odjava(examId:number): void {\n    this.examService.deleteExam(examId);\n    location.reload();\n  }\n\n}\n","\n<div class=\"container\">\n    <form>\n        <div class=\"form group\">\n            <label for=\"cardNumber\">Index</label>\n            <input type=\"text\" name=\"cardNumber\" class=\"form-control\" [(ngModel)]='student.cardNumber' [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <div class=\"form group\">\n            <label for=\"firstName\">Ime </label>\n            <input type=\"text\" name=\"firstName\" class=\"form-control\" [(ngModel)]=\"student.firstName\" [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <div class=\"form group\">\n            <label for=\"lastName\">Prezime</label>\n            <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"student.lastName\" [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <br>\n        <div>\n            <div>\n                <h3>Kursevi od korisnika</h3>\n            </div>\n            <table class=\"table table-bordered\">\n              <tr *ngFor=\"let enrollment of enrollments\">\n                <td>\n                  {{enrollment.course.name}}\n                </td>\n              </tr>\n            </table>\n          </div>\n          \n          <div>\n            <div>\n                <h3>Prijava Ispita</h3>\n            </div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Ispitni Rok</th>\n                <th>Početak Ispitnog Roka</th>\n                <th>Kraj Ispitnog Roka</th>\n                <th>Prijava</th>\n            </thead>\n              <tr *ngFor=\"let examPeriod of nextExamPeriods\">\n                <td>{{examPeriod.name}}</td>\n                <td>{{examPeriod.startDate | date: 'dd/MM/yyyy'}}</td>\n                <td>{{examPeriod.endDate | date: 'dd/MM/yyyy'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"prijavaIspita(examPeriod.id)\">\n                    Prijavi Ispite u Ovom Roku\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n\n          <div *ngIf=\"student.id\">\n            <div>\n              <h3>Rezultati ispita</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Ocena</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of examspass\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <spam *ngIf=\"!(exam.labPoints+exam.examPoints > 50)\">5</spam>\n                  <spam *ngIf=\"exam.labPoints+exam.examPoints > 50 && !(exam.labPoints+exam.examPoints >61)\">6</spam>\n                  <spam *ngIf=\"exam.labPoints+exam.examPoints > 60 && !(exam.labPoints+exam.examPoints >71)\">7</spam>\n                  <spam *ngIf=\"exam.labPoints+exam.examPoints > 70 && !(exam.labPoints+exam.examPoints >81)\">8</spam>\n                  <spam *ngIf=\"exam.labPoints+exam.examPoints > 80 && !(exam.labPoints+exam.examPoints >91)\">9</spam>\n                  <spam *ngIf=\"exam.labPoints+exam.examPoints > 90 && !(exam.labPoints+exam.examPoints >101)\">10</spam>\n                </td>\n                <td>\n                  <button *ngIf=\"exam.labPoints+exam.examPoints > 51 \" type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                  <button *ngIf=\"!(exam.labPoints+exam.examPoints > 51) \" type=\"button\" class=\"btn btn-danger right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <div>\n            <h3>Obrada ispita...</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of exams\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <div>\n            <h3>Ispiti u narednom periodu</h3>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Naziv predmeta</th>\n                <th>Datum</th>\n                <th>Vreme ispita</th>\n                <th>Odjava ispita</th>\n                <th>Informacije</th>\n            </thead>\n              <tr *ngFor=\"let exam of nextexams\">\n                <td>\n                  {{exam.course.name}}\n                </td>\n                <td>{{exam.date | date: 'dd/MM/yyyy'}}</td>\n                <td>{{exam.date | date: 'HH:mm'}}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-danger right\" aria-label=\"Info\" (click)=\"odjava(exam.id)\">\n                    Odjavi Ispit\n                  </button>\n                </td>\n\n                <td>\n                  <button type=\"button\" class=\"btn btn-success right\" aria-label=\"Info\" (click)=\"gotoInfo(exam.id)\">\n                    Informacije o ispitu\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          </div>\n          <br>\n          <div>\n              <div>\n                  <h3>Dokumenti korisnika</h3>\n              </div>\n              <table class=\"table table-bordered\">\n                <tr *ngFor=\"let document of documents\">\n                  <td>\n                    {{document.naziv}}\n                  </td>\n                </tr>\n              </table>\n\n            <div>\n                <h3>Uplate korisnika</h3>\n            </div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <th>Svrha Uplate</th>\n                <th>Vrednost Uplate</th>\n                <th>Vreme Uplate</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let payment of payments\">\n                <td>{{payment.svrhaUplate}}</td>\n                <td>{{payment.vrednostUplate}}</td>\n                <td>{{payment.date | date:'dd/MM/yyyy HH:mm'}}</td>\n              </tr>\n              <tr>\n                <td>Ukupno</td>\n                <td id=\"sum\">{{sum}}</td>\n                <td></td> \n            </tr>\n            </tbody>\n            </table>\n            </div> \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/shared_service/login.service';\nimport {Login} from '../../classes/login';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {Router} from '@angular/router';\nimport { Authority } from 'src/app/classes/authority';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  login: Login;\n\n\n  constructor(private loginService: LoginService, private _router: Router, private route: ActivatedRoute) {\n    this.login = new Login({\n      username: '',\n      password: '',\n      authority: new Authority({\n        name: ''\n      }),\n      student: null,\n      teacher: null\n    });\n  }\n\n  ngOnInit(): void {\n    if (JSON.parse(localStorage.getItem('user')).authority.name == \"ADMIN\") {\n      this._router.navigate(['/students']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n  }\n\n  loginProcess(studentUsername, studentPassword){\n      if (studentUsername == \"\" || studentPassword == \"\"){\n        alert('Molimo popunite formu');\n      }else{\n          this.loginService.getLogin(studentUsername, studentPassword)\n            .then(login =>{\n              localStorage.setItem('user', JSON.stringify(login));\n              this.loginService.announceChange();\n\n              console.log(JSON.parse(localStorage.getItem('user')).id);\n              console.log(JSON.parse(localStorage.getItem('user')).authority.name);\n\n              if (JSON.parse(localStorage.getItem('user')).authority.name == null){\n                alert(\"Pogresan login\")\n              }else if (JSON.parse(localStorage.getItem('user')).authority.name == 'NASTAVNIK'){\n                this.loginService.announceChange();\n                this._router.navigate(['teacher-page']);\n                setTimeout(() => {\n                  location.reload();\n                }, 10);\n              }else if (JSON.parse(localStorage.getItem('user')).authority.name == 'ADMIN'){\n                this.loginService.announceChange();\n                this._router.navigate(['students']);\n                setTimeout(() => {\n                  location.reload();\n                }, 10);\n              }else if (JSON.parse(localStorage.getItem('user')).authority.name == 'STUDENT'){\n                this.loginService.announceChange();\n                this._router.navigate(['student-page']);\n                setTimeout(() => {\n                  location.reload();\n                }, 10);\n              }\n            });\n          \n\n      }\n\n  }\n\n\n  \n}\n","<div class=\"wrapper fadeInDown\">\n    <div id=\"formContent\">\n      <!-- Tabs Titles -->\n  \n      <!-- Icon -->\n      <div class=\"fadeIn first\">\n        <h3>Prijava</h3>\n      </div>\n  \n      <!-- Login Form -->\n        <div class=\"form group\">\n          <input type=\"text\" id=\"username\" class=\"fadeIn second\" name=\"username\" placeholder=\"Korisnicko ime\" [(ngModel)]=\"login.username\">\n        </div>\n        <div class=\"form group\">\n          <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"password\" placeholder=\"Lozinka\" [(ngModel)]=\"login.password\">\n        </div>\n        <button id=\"loginBtn\" class=\"fadeIn fourth\" (click)=\"loginProcess(login.username,login.password)\">Prijava</button>\n\n        \n      <!-- Remind Passowrd -->\n      <!-- <div id=\"formFooter\">\n        <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n      </div> -->\n  \n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Subject} from 'rxjs';\nimport {Documents} from '../classes/documents';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentsService {\n\n  private baseUrl = 'http://localhost:8080/api/documents';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private documents: Documents;\n  private RegenerateData = new Subject<void>();\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getDocuments(): Promise<Documents[]> {\n    const url = `${this.baseUrl}/all`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Documents[])\n        .catch(this.handleError);\n}\n  getDocument(id: Number): Promise<Documents> {\n    const url = `${this.baseUrl}/${id}`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Documents)\n        .catch(this.handleError);\n}\n  deleteDocument(documents: Documents): Promise<{Documents}> {\n    const url = `${this.baseUrl}/${documents.id}`;\n    return this._http\n        .delete(url)\n        .toPromise()\n        .catch(this.handleError);\n}\n  addDocument(documents: Documents): Promise<Documents> {\n    return this._http\n        .post(this.baseUrl, JSON.stringify(documents), { headers: this.headers })\n        .toPromise()\n        .then(res => res.json() as Documents)\n        .catch(this.handleError);\n}\n \n\n  announceChange() {\n    this.RegenerateData.next();\n}\n  setter(documents: Documents){\n      this.documents = documents;\n    }\n  getter(){\n  return this.documents;\n  }\n  handleError(error: any): Promise<any> {\n    console.error(\"Error... \", error);\n    return Promise.reject(error.message || error);\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Teacher } from '../../classes/teacher';\nimport {Router}  from '@angular/router';\nimport {TeacherService}  from '../../shared_service/teacher.service';\nimport { Subject} from 'rxjs';\nimport { Course } from '../../classes/course'\n\n@Component({\n  selector: 'app-teacher-form',\n  templateUrl: './teacher-form.component.html',\n  styleUrls: ['./teacher-form.component.css']\n})\nexport class TeacherFormComponent implements OnInit {\n  public teacher: Teacher;\n  courses: Course[];\n  public teacherRank = '';\n  public selectedTeacherRank = '';\n\n  constructor(private teacherService: TeacherService, private _router: Router) { }\n  private RegenerateData = new Subject<void>();\n\n  ngOnInit() {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.teacher = this.teacherService.getter();\n    if (this.teacher !== undefined){\n      this.teacherService.getTeacherCourses(this.teacher.id).then(courses =>\n        this.courses = courses);\n        this.selectedTeacherRank = this.teacher.teacherRank;\n      }\n  }\n  onChange(event) {\n    this.teacherRank = event.target.options[event.target.options.selectedIndex].text;\n  }\n  processForm(){\n    if (this.teacher.id === undefined){\n\n      this.teacher.teacherRank = this.teacherRank;\n      this.teacherService.addTeacher(this.teacher)\n      .then(teacher => {\n        this.teacherService.announceChange();\n        this._router.navigate(['teachers']);\n      });\n    }else{\n      this.teacherService.editTeacher(this.teacher)\n      .then(teacher => {\n        this.teacherService.announceChange();\n        this._router.navigate(['teachers']);\n      });\n    }\n  }\n\n}\n","\n<div class=\"container\">\n        <form (ngSubmit)=\"processForm()\">\n            <div class=\"form group\">\n                <label for=\"cardNumber\">Ime</label>\n                <input type=\"text\" name=\"firstName\" class=\"form-control\" [(ngModel)]=\"teacher.firstName\" [ngModelOptions]=\"{standalone: true}\">\n            </div>\n            <div class=\"form group\">\n                <label for=\"firstName\">Prezime</label>\n                <input type=\"text\" name=\"fname\" class=\"form-control\" [(ngModel)]=\"teacher.lastName\" [ngModelOptions]=\"{standalone: true}\">\n            </div>\n            <div class=\"form group\">\n                <label for=\"teacherRank\">Uloga</label>\n                <select class=\"form-control\" [(ngModel)]=\"teacher.teacherRank\" (change)=\"onChange($event)\" [ngModelOptions]=\"{standalone: true}\">\n                    <option [value]=\"1\">Profesor</option>\n                    <option [value]=\"2\">Asistent</option>\n                    <option [value]=\"3\">Demonstrator</option>\n                  </select>\n            </div>\n            <br>\n            <div>\n                <div>\n                    <h3>Predmeti od nastavnika</h3>\n                </div>\n                <table class=\"table table-bordered\">\n                  <tr *ngFor=\"let course of courses\">\n                    <td>\n                {{course.name}}\n                    </td>\n                    <td><button type=\"button\" class=\"btn btn-danger\" aria-label=\"Delete\" (click)=\"deleteCourse(course.id)\">\n                    Obrisi</button></td>\n                </tr>\n                </table>\n            </div> \n            <input type=\"submit\" value=\"save\" class=\"btn btn-success\">\n        </form>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport {Exam} from '../../classes/exam';\nimport {ExamService} from '../../shared_service/exam.service';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\nimport {Student} from '../../classes/student';\nimport {Course} from '../../classes/course';\nimport {ExamPeriod} from '../../classes/exam-period';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n\n  public exams: Exam[];\n  subscription: Subscription\n\n  constructor(private _examService: ExamService, private _router: Router) {\n    this.subscription = _examService.RegenerateData$.subscribe(() =>\n    this.getExams()\n  );\n   }\n\n   ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getExams();\n  }\n\n  getExams() {\n    this._examService.getExams().then(exam =>\n      this.exams = exam);\n  }\n\n  deleteExam(exam: Exam): void {\n    this._examService.deleteExam(exam.id).then(\n      () => this.getExams()\n    );\n  }\n  \n  newExam(){\n    let exam = new Exam({ \n      examPoints: 0,\n      labPoints: 0,\n      date: null,\n      course: new Course({\n        name: ''\n      }),\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      }),\n      examPeriod: new ExamPeriod({\n        name: '',\n        startDate: null,\n        endDate: null,\n      }),\n    });\n    this._examService.setter(exam);\n    this._router.navigate(['/exam-form']);\n  }\n\n  editDate(exam){\n    this._examService.setter(exam);\n    this._router.navigate(['/exam-date']);\n\n  }\n\n}\n","<div class=\"container\">\n    <h3>Ispiti</h3>\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Ispitni Rok</th>\n            <th>Predmet</th>\n            <th>Poeni sa Ispita</th>\n            <th>Poeni sa Predispitnih Obaveza</th>\n            <th>Vreme Odrzavanja Ispita</th>\n            <th>Ime i Prezime Studenta</th>\n            <th>Br Indeksa</th>\n            <th></th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let exam of exams\">\n                <td>{{exam.examPeriod.name}}</td>\n                <td>{{exam.course.name}}</td>\n                <td>{{exam.examPoints}}</td>\n                <td>{{exam.labPoints}}</td>\n                <td>{{exam.date | date:'dd/MM/yyyy HH:mm'}}</td>\n                <td *ngIf=\"!(exam.student==null)\">{{exam.student.firstName + ' ' + exam.student.lastName}}</td>\n                <td *ngIf=\"exam.student==null\">-</td>\n                <td *ngIf=\"!(exam.student==null)\" class=\"cardNumber\">{{exam.student.cardNumber}}</td>\n                <td *ngIf=\"exam.student==null\">-</td>\n                <td><button (click)=\"deleteExam(exam)\" class=\"btn btn-danger\">Obriši</button></td> \n                <td><button *ngIf=\"exam.date==null\" (click)=\"editDate(exam)\" class=\"btn btn-primary\">Unesi Datum</button></td>\n            </tr>\n\n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"newExam()\">Nov ispit</button>\n    </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule}   from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CourseComponent } from './components/course/course.component';\nimport {CourseService} from './shared_service/course.service';\nimport { StudentComponent } from './components/student/student.component';\nimport {StudentService} from './shared_service/student.service';\nimport { TeacherComponent } from './components/teacher/teacher.component';\nimport { TeacherFormComponent } from './components/teacher-form/teacher-form.component';\nimport {TeacherService} from './shared_service/teacher.service';\nimport { StudentFormComponent } from './components/student-form/student-form.component';\nimport { CourseFormComponent } from './components/course-form/course-form.component';\nimport { EnrollmentComponent } from './components/enrollment/enrollment.component';\nimport {EnrollmentService} from './shared_service/enrollment.service';\nimport { NgbDate, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ExamPeriodComponent } from './components/exam-period/exam-period.component';\nimport {ExamPeriodServiceService} from './shared_service/exam-period-service.service';\nimport { ExamPeriodFormComponent } from './components/exam-period-form/exam-period-form.component';\nimport { DocumentsComponent } from './components/documents/documents.component';\nimport { DocumentsService } from './shared_service/documents.service';\nimport { DocumentFormComponent } from './components/document-form/document-form.component';\nimport { ExamService } from './shared_service/exam.service';\nimport { PaymentComponent } from './components/payment/payment.component';\nimport { PaymentService } from './shared_service/payment.service';\nimport { PaymentFormComponent } from './components/payment-form/payment-form.component';\nimport { ExamComponent } from './components/exam/exam.component';\nimport { ExamFormComponent } from './components/exam-form/exam-form.component';\nimport { ExamInformationFormComponent } from './components/exam-information-form/exam-information-form.component';\nimport { TeacherPageComponent } from './components/teacher-page/teacher-page.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginService } from './shared_service/login.service';\nimport { RegisterStudentComponent } from './components/register-student/register-student.component';\nimport { RegisterTeacherComponent } from './components/register-teacher/register-teacher.component';\nimport { RegisterAdminComponent } from './components/register-admin/register-admin.component';\nimport { StudentPageComponent } from './components/student-page/student-page.component';\nimport { ExamRegistrationComponent } from './components/exam-registration/exam-registration.component';\nimport { ExamDateComponent } from './components/exam-date/exam-date.component';\n\n\n\nconst appRoutes: Routes = [\n  { path: 'students', component: StudentComponent},\n  { path: 'courses', component: CourseComponent},\n  { path: 'student-form', component: StudentFormComponent},\n  { path: 'course-form', component: CourseFormComponent},\n  { path: 'teachers', component: TeacherComponent},\n  { path: 'enrollment-form', component: EnrollmentComponent},\n  { path: 'teacher-form', component: TeacherFormComponent},\n  { path: 'exam-period', component: ExamPeriodComponent},\n  { path: 'exam-period-form', component: ExamPeriodFormComponent},\n  { path: 'documents', component: DocumentsComponent},\n  { path: 'document-form', component: DocumentFormComponent},\n  { path: 'payments', component: PaymentComponent},\n  { path: 'payment-form', component: PaymentFormComponent},\n  { path: 'exams', component: ExamComponent},\n  { path: 'exam-form', component: ExamFormComponent},\n  { path: 'exam-info', component: ExamInformationFormComponent},\n  { path: 'teacher-page', component: TeacherPageComponent},\n  { path: '', component: LoginComponent},\n  { path: 'register-admin', component: RegisterAdminComponent},\n  { path: 'register-student', component: RegisterStudentComponent},\n  { path: 'register-teacher', component: RegisterTeacherComponent},\n  { path: 'student-page', component: StudentPageComponent},\n  { path: 'exam-registration', component: ExamRegistrationComponent},\n  {path: 'exam-date', component: ExamDateComponent}\n\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    CourseComponent,\n    StudentComponent,\n    TeacherComponent,\n    StudentFormComponent,\n    TeacherFormComponent,\n    CourseFormComponent,\n    EnrollmentComponent,\n    ExamPeriodComponent,\n    ExamPeriodFormComponent,\n    DocumentsComponent,\n    DocumentFormComponent,\n    PaymentComponent,\n    PaymentFormComponent,\n    ExamComponent,\n    ExamFormComponent,\n    ExamInformationFormComponent,\n    TeacherPageComponent,\n    LoginComponent,\n    RegisterStudentComponent,\n    RegisterTeacherComponent,\n    RegisterAdminComponent,\n    StudentPageComponent,\n    ExamRegistrationComponent,\n    ExamDateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    NgbModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [StudentService, CourseService, TeacherService, EnrollmentService,\n    ExamPeriodServiceService, DocumentsService,ExamService, PaymentService, PaymentFormComponent, ExamComponent,\n    ExamFormComponent, LoginService, ExamRegistrationComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Documents } from '../../classes/documents';\nimport { Student } from '../../classes/student';\nimport { StudentService } from \"../../shared_service/student.service\";\nimport { DocumentsService } from \"../../shared_service/documents.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-document-form',\n  templateUrl: './document-form.component.html',\n  styleUrls: ['./document-form.component.css']\n})\nexport class DocumentFormComponent implements OnInit {\n\n  documents: Documents;\n  students: Student[];\n\n  constructor(private route: ActivatedRoute, private studentService: StudentService,\n     private documentsService: DocumentsService,\n    private location: Location, private _router: Router) {\n    this.documents = new Documents({\n      naziv: null,\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      }),\n    });\n\n  }\n\n  ngOnInit() {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.studentService.getStudents().then(students =>\n      this.students = students);\n  }\n\n  add(): void {\n    if(this.documents.naziv === null){\n      alert(\"Niste uneli naziv dokumenta!\");\n    }else if(this.documents.student.firstName===\"\"){\n      alert(\"Izaberite studenta\")\n    }\n    else {\n    this.documentsService.addDocument(this.documents)\n      .then(documents => {\n        this.documentsService.announceChange();\n        this.goBack();\n      });\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    <h3>Add new Document</h3>\n  </div>\n  <div>\n\n    <div class=\"form group\">\n        <label for=\"naziv\">Naziv</label>\n        <input type=\"text\" name=\"naziv\" class=\"form-control\" [(ngModel)]=\"documents.naziv\">\n    </div>\n  \n      <div class=\"form-group\">\n        <label for=\"student\">Student</label>\n        <select class=\"form-control\" [(ngModel)]=\"documents.student\">\n              <option *ngFor=\"let s of students\" [ngValue]=\"s\">{{s.firstName}} {{s.lastName}} {{s.cardNumber}}</option>\n            </select>\n      </div>\n  \n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\">OK</button>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"goBack()\">Cancel</button>\n  </div> \n","import{Student}from'./student';\n\nexport class Payment implements PaymentInterface{\n\n    public id: number;\n    public svrhaUplate: string;\n    public vrednostUplate: number;\n    public date: Date;\n\tpublic student: Student;\n\t\t\n\tconstructor(paymentCfg:PaymentInterface)\n\t{\t\n        this.id = paymentCfg.id;\n        this.svrhaUplate = paymentCfg.svrhaUplate;\n        this.vrednostUplate = paymentCfg.vrednostUplate;\n        this.date = paymentCfg.date;\n\t\tthis.student = paymentCfg.student;\n\t}\n\n}\n\ninterface PaymentInterface{\n    id?: number;\n    svrhaUplate: string;\n    vrednostUplate: number;\n    date: Date;\n\tstudent: Student;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {DocumentsService} from '../../shared_service/documents.service';\nimport {Documents} from '../../classes/documents';\nimport {Router} from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {Student} from '../../classes/student';\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css']\n})\nexport class DocumentsComponent implements OnInit {\n\n  public documents: Documents[];\n  subscription: Subscription\n\n  constructor(private _documentsService: DocumentsService, private _router: Router) {\n    this.subscription = _documentsService.RegenerateData$.subscribe(() =>\n    this.getDocuments()\n  );\n   }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getDocuments();\n  }\n\n  getDocuments() {\n    this._documentsService.getDocuments().then(documents =>\n      this.documents = documents);\n  }\n\n  deleteDocument(documents: Documents): void {\n    this._documentsService.deleteDocument(documents).then(\n      () => this.getDocuments()\n    );\n  }\n  \n  newDocument(){\n    let documents = new Documents({ \n      naziv: '',\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      })\n    });\n    this._documentsService.setter(documents);\n    this._router.navigate(['/document-form']);\n  }\n\n}\n","<div class=\"container\">\n    <h3>Dokumenti</h3>\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Naziv</th>\n            <th>Ime i Prezime Studenta</th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let document of documents\">\n                <td>{{document.naziv}}</td>\n                <td>{{document.student?.firstName + ' ' + document.student?.lastName}}</td>\n                <td><button (click)=\"deleteDocument(document)\" class=\"btn btn-danger\">Obriši</button></td>\n               \n            </tr>\n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"newDocument()\">Novi dokument</button>\n    </div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Teacher } from '../classes/teacher';\nimport { Course } from '../classes/course';\nimport { Subject} from 'rxjs';\n\n@Injectable()\nexport class TeacherService {\n  private baseUrl = 'http://localhost:8080/api/teachers';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private teacher:Teacher;\n  private RegenerateData = new Subject<void>();\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getTeachers(): Promise<Teacher[]> {\n    return this._http.get(this.baseUrl)\n        .toPromise()\n        .then(response =>\n            response.json() as Teacher[])\n        .catch(this.handleError);\n}\ngetTeacher(id): Promise<Teacher> {\n  const url = `${this.baseUrl}/${id}`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Teacher)\n      .catch(this.handleError);\n}\ndeleteTeacher(id: Number): Promise<{}> {\n  const url = `${this.baseUrl}/${id}`;\n  return this._http\n      .delete(url)\n      .toPromise()\n      .catch(this.handleError);\n}\naddTeacher(teacher: Teacher): Promise<Teacher> {\n  return this._http\n      .post(this.baseUrl, JSON.stringify(teacher), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as Teacher)\n      .catch(this.handleError);\n}\neditTeacher(teacher: Teacher): Promise<Teacher> {\n  return this._http\n      .put(this.baseUrl, JSON.stringify(teacher), { headers: this.headers })\n      .toPromise()\n      .then(res => res.json() as Teacher)\n      .catch(this.handleError);\n}\ngetTeacherCourses(teacherId): Promise<Course[]> {\n  const url = `${this.baseUrl}/${teacherId}/courses`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Course[])\n      .catch(this.handleError);\n}\nannounceChange() {\n  this.RegenerateData.next();\n}\n\n    setter(teacher: Teacher){\n        this.teacher = teacher;\n      }\n    getter(){\n    return this.teacher;\n    }\n    handleError(error: any): Promise<any> {\n      console.error(\"Error... \", error);\n      return Promise.reject(error.message || error);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Course } from 'src/app/classes/course';\nimport { Teacher } from 'src/app/classes/teacher';\nimport { Login } from 'src/app/classes/login';\nimport { TeacherService } from 'src/app/shared_service/teacher.service';\nimport { CourseService } from 'src/app/shared_service/course.service';\n\n\n@Component({\n  selector: 'app-teacher-page',\n  templateUrl: './teacher-page.component.html',\n  styleUrls: ['./teacher-page.component.css']\n})\nexport class TeacherPageComponent implements OnInit {\n  public teacher:Teacher;\n  courses: Course[];\n\n  constructor(private _courseService: CourseService,private teacherService: TeacherService, private _router: Router) {\n    this.teacher = new Teacher({\n      firstName:'',\n      lastName:'',\n      teacherRank:''\n    })\n  }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.teacher = this.teacherService.getter();\n    console.log()\n\n    this.teacherService.getTeacher((JSON.parse(localStorage.getItem('user')).teacherid)).then(teacher =>\n      this.teacher = teacher);\n\n      this.teacherService.getTeacherCourses(JSON.parse(localStorage.getItem('user')).teacherid).then(courses =>\n        this.courses = courses);\n  }\n  updateCourse(course){\n    this._courseService.setter(course);\n    this._router.navigate(['/course-form']);\n\n  }\n\n}\n","<div class=\"container\">\n    <form>\n        <div class=\"form group\">\n            <label for=\"cardNumber\">Ime</label>\n            <input type=\"text\" name=\"firstName\" class=\"form-control\" [(ngModel)]=\"teacher.firstName\" [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <div class=\"form group\">\n            <label for=\"firstName\">Prezime</label>\n            <input type=\"text\" name=\"fname\" class=\"form-control\" [(ngModel)]=\"teacher.lastName\" [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <div class=\"form group\">\n            <label for=\"teacherRank\">Uloga</label>\n            <input type=\"text\" name=\"fname\" class=\"form-control\" [(ngModel)]=\"teacher.teacherRank\" [ngModelOptions]=\"{standalone: true}\" disabled>\n        </div>\n        <br>\n        <div>\n            <div>\n                <h3>Vasi kursevi</h3>\n            </div>\n            <table class=\"table table-bordered\">\n                <th>Naziv predmeta</th>\n                <th>Informacije o predmetu</th>\n              <tr *ngFor=\"let course of courses\">\n                <td>\n            {{course.name}}\n                </td>\n                <td><button (click)=\"updateCourse(course)\" class=\"btn btn-success\">Informacije</button></td>\n            </tr>\n            </table>\n        </div> \n    </form>\n</div>","import{Student}from'./student';\n\nexport class Documents implements DocumentsInterface{\n\tpublic id: number;\n\tpublic naziv: string;\n\tpublic student: Student;\n\t\t\n\tconstructor(documentsCfg:DocumentsInterface)\n\t{\t\n        this.id = documentsCfg.id;\n        this.naziv = documentsCfg.naziv;\n        this.student = documentsCfg.student;\t\t\n\t}\n}\n\ninterface DocumentsInterface{\n    id?: number;\n    naziv: string;\n    student: Student;\n}","import { Component, OnInit } from '@angular/core';\nimport {Payment} from '../../classes/payment';\nimport {PaymentService} from '../../shared_service/payment.service';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\nimport {Student} from '../../classes/student';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  public payments: Payment[];\n  public sum: number;\n  subscription: Subscription\n\n  constructor(private _paymentService: PaymentService, private _router: Router) {\n    this.subscription = _paymentService.RegenerateData$.subscribe(() =>\n    this.getPayments()\n  );\n   }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getPayments();\n    this.getAllPaymentsSum();\n  }\n\n  getPayments() {\n    this._paymentService.getPayments().then(payment =>\n      this.payments = payment);\n  }\n\n  getAllPaymentsSum() {\n    this._paymentService.getAllPaymentsSum().then(sum =>\n      this.sum = sum);\n  }\n\n  deletePayment(payment: Payment): void {\n    this._paymentService.deletePayment(payment).then(\n      () => this.getPayments()\n    );\n  }\n  \n  newPayment(){\n    let payment = new Payment({ \n      svrhaUplate: '',\n      vrednostUplate: 0,\n      date: null,\n      student: new Student({\n        cardNumber: '',\n        firstName: '',\n        lastName: ''\n      })\n    });\n    this._paymentService.setter(payment);\n    this._router.navigate(['/payment-form']);\n  }\n\n}\n","<div class=\"container\">\n    <h3>Uplate</h3>\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Svrha Uplate</th>\n            <th>Vrednost Uplate</th>\n            <th>Vreme Uplate</th>\n            <th>Ime i Prezime Studenta</th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let payment of payments\">\n                <td>{{payment.svrhaUplate}}</td>\n                <td>{{payment.vrednostUplate}}</td>\n                <td>{{payment.date | date:'dd/MM/yyyy HH:mm'}}</td>\n                <td>{{payment.student.firstName + ' ' + payment.student.lastName}}</td>\n                <td><button (click)=\"deletePayment(payment)\" class=\"btn btn-danger\">Obriši</button></td> \n            </tr>\n            <tr>\n                <td>Ukupno</td>\n                <td id=\"sum\">{{sum}}</td>\n                <td></td>\n                <td></td>\n                <td></td> \n            </tr>\n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"newPayment()\">Nova uplata</button>\n    </div>","import { Injectable } from '@angular/core';\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Subject} from 'rxjs';\nimport {Student} from '../classes/student';\nimport {Enrollment} from '../classes/enrollment'\nimport {Documents} from '../classes/documents'\nimport { Exam } from '../classes/exam';\nimport { Payment } from '../classes/payment';\n\n@Injectable()\nexport class StudentService {\n  private baseUrl = 'http://localhost:8080/api/students';\n  private headers = new Headers ({'Content-Type': 'application/json'});\n  private options = new RequestOptions({headers: this.headers});\n  private student: Student;\n  private RegenerateData = new Subject<void>();\n  RegenerateData$ = this.RegenerateData.asObservable();\n  constructor(private _http: Http) {}\n\n  getStudents(): Promise<Student[]> {\n    return this._http.get(this.baseUrl)\n        .toPromise()\n        .then(response =>\n            response.json() as Student[])\n        .catch(this.handleError);\n}\n  getStudent(id): Promise<Student> {\n    const url = `${this.baseUrl}/${id}`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Student)\n        .catch(this.handleError);\n}\n  deleteStudent(student: Student): Promise<{Student}> {\n    const url = `${this.baseUrl}/${student.id}`;\n    return this._http\n        .delete(url)\n        .toPromise()\n        .catch(this.handleError);\n}\n  addStudent(student: Student): Promise<Student> {\n    return this._http\n        .post(this.baseUrl, JSON.stringify(student), { headers: this.headers })\n        .toPromise()\n        .then(res => res.json() as Student)\n        .catch(this.handleError);\n}\n    editStudent(student: Student): Promise<Student> {\n      return this._http\n          .put(this.baseUrl, JSON.stringify(student), { headers: this.headers })\n          .toPromise()\n          .then(res => res.json() as Student)\n          .catch(this.handleError);\n  }\n\n  getStudentEnrollments(studentId: number): Promise<Enrollment[]> {\n    const url = `${this.baseUrl}/${studentId}/courses`;\n    return this._http.get(url)\n        .toPromise()\n        .then(response =>\n            response.json() as Enrollment[])\n        .catch(this.handleError);\n}\n\ngetStudentExams(studentId: number): Promise<Exam[]> {\n  const url = `${this.baseUrl}/${studentId}/exams`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam[])\n      .catch(this.handleError);\n}\ngetStudentExamsPass(studentId: number): Promise<Exam[]> {\n  const url = `${this.baseUrl}/${studentId}/examspass`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam[])\n      .catch(this.handleError);\n}\n\ngetStudentNextExams(studentId: number): Promise<Exam[]> {\n  const url = `${this.baseUrl}/${studentId}/nextexems`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Exam[])\n      .catch(this.handleError);\n}\n\ngetStudentDocuments(studentId: number): Promise<Documents[]> {\n  const url = `${this.baseUrl}/${studentId}/documents`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Documents[])\n      .catch(this.handleError);\n}\n\ngetStudentPayments(studentId: number): Promise<Payment[]> {\n  const url = `${this.baseUrl}/${studentId}/payments`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as Payment[])\n      .catch(this.handleError);\n}\n\ngetAllPaymentsSum(studentId: number): Promise<number> {\n  const url = `${this.baseUrl}/${studentId}/allSum`;\n  return this._http.get(url)\n      .toPromise()\n      .then(response =>\n          response.json() as number)\n      .catch(this.handleError);\n}\n\n  announceChange() {\n    this.RegenerateData.next();\n}\n  setter(student: Student){\n      this.student = student;\n    }\n  getter(){\n  return this.student;\n  }\n  handleError(error: any): Promise<any> {\n    console.error(\"Error... \", error);\n    return Promise.reject(error.message || error);\n}\n\n}\n","export class Authority implements AuthorityInterface{\n    public id: number;\n    public name: string;\n    constructor(authorityCfg: AuthorityInterface)\n    {\n    this.id = authorityCfg.id;\n    this.name = authorityCfg.name;\n    }\n    \n    }\n    \n    interface AuthorityInterface{\n    id?: number;\n    name: string;\n    }\n    ","export class ExamPeriod implements ExamPeriodInterface{\npublic id: number;\npublic name: string;\npublic startDate: Date;\npublic endDate: Date;\nconstructor(examCfg: ExamPeriodInterface)\n{\nthis.id = examCfg.id;\nthis.name = examCfg.name;\nthis.startDate = examCfg.startDate;\nthis.endDate = examCfg.endDate;\n}\n\n}\n\ninterface ExamPeriodInterface{\n    id?: number;\n    name: string;\n    startDate: Date;\n    endDate: Date;\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Login } from '../../classes/login';\nimport { LoginService } from \"../../shared_service/login.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Authority } from 'src/app/classes/authority';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register-admin',\n  templateUrl: './register-admin.component.html',\n  styleUrls: ['./register-admin.component.css']\n})\nexport class RegisterAdminComponent implements OnInit {\n\n  login: Login;\n\n  constructor(private route: ActivatedRoute, private loginService: LoginService,\n   private location: Location, private _router: Router) {\n    this.login = new Login({\n      username: null,\n      password: null,\n      authority: new Authority({\n        name: 'ADMIN'\n      }),\n      student: null,\n      teacher: null\n    });\n\n }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n  }\n\n  registerAdmin(): void {\n    if(this.login.username === null){\n      alert(\"Unesite korisničko ime!\");\n    }else if(this.login.password === null){\n      alert(\"Unesite lozinku!\")\n    }\n    else {\n    this.loginService.registerAdmin(this.login.username, this.login.password)\n      .then(login => {\n        this.loginService.announceChange();\n        window.location.href = \"/\";\n      });\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\n    <h3>Add new Admin</h3>\n  </div>\n  <div>\n\n    <div class=\"form group\">\n        <label for=\"username\">Korisnicko ime</label>\n        <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"login.username\">\n    </div>\n  \n    <div class=\"form group\">\n        <label for=\"password\">Lozinka</label>\n        <input type=\"text\" name=\"password\" class=\"form-control\" [(ngModel)]=\"login.password\">\n    </div>\n  \n  \n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-primary\" (click)=\"registerAdmin()\">OK</button>\n    <button class=\"btn btn-primary\" (click)=\"goBack()\">Cancel</button>\n  </div> \n","import { Student } from './student';\nimport { Course } from './course';\n\nexport class Enrollment implements EnrollmentInterface{\n\tpublic id: number;\n\tpublic startDate: Date;\n\tpublic endDate: Date;\n\tpublic student: Student;\n    public course: Course;\n\t\t\n\tconstructor(enrollmentCfg: EnrollmentInterface)\n\t{\n  this.id = enrollmentCfg.id;\n  this.startDate = enrollmentCfg.startDate;\n  this.endDate = enrollmentCfg.endDate;\n  this.student = enrollmentCfg.student;\n  this.course = enrollmentCfg.course;\n\t}\n}\n\ninterface EnrollmentInterface{\n\tid?: number;\n\tstartDate: Date;\n\tendDate: Date;\n\tstudent: Student;\n    course: Course;\n}","import { Component, OnInit } from '@angular/core';\nimport {StudentService} from '../../shared_service/student.service';\nimport {Student} from '../../classes/student';\nimport {Router} from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  public students: Student[];\n  subscription: Subscription\n\n  constructor(private _studentService: StudentService, private _router: Router) {\n    this.subscription = _studentService.RegenerateData$.subscribe(() =>\n    this.getStudents()\n  );\n   }\n\n  ngOnInit(): void {\n\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n\n    this.getStudents();\n  }\n\n  getStudents() {\n    this._studentService.getStudents().then(students =>\n      this.students = students);\n  }\n\n  deleteStudent(student: Student): void {\n    this._studentService.deleteStudent(student).then(\n      () => this.getStudents()\n    );\n  }\n  updateStudent(student){\n    this._studentService.setter(student);\n    this._router.navigate(['/student-form']);\n\n  }\n  newStudent(){\n    this._router.navigate(['/register-student']);\n  }\n  \n\n}\n","<div class=\"container\">\n<h3>Studenti</h3>\n<table class=\"table table-striped\">\n    <thead>\n        <th>Index</th>\n        <th>Ime</th>\n        <th>Prezime</th>\n        <th></th>\n        <th></th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let student of students\">\n            <td class=\"cardNumber\">{{student.cardNumber}}</td>\n            <td>{{student.firstName}}</td>\n            <td>{{student.lastName}}</td>\n            <td><button (click)=\"deleteStudent(student)\" class=\"btn btn-danger\">Obriši</button></td>\n            <td><button (click)=\"updateStudent(student)\" class=\"btn btn-primary\">Izmeni</button></td>\n        </tr>\n    </tbody>\n</table>\n<button class=\"btn btn-success\" (click)=\"newStudent()\">Novi student</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {CourseService} from '../../shared_service/course.service';\nimport {Course} from '../../classes/course';\nimport { Subscription } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  public courses: Course[];\n  subscription: Subscription\n\n  constructor(private _courseService: CourseService, private _router: Router) {\n    this.subscription = _courseService.RegenerateData$.subscribe(() =>\n    this.getCourses()\n  );\n   }\n\n  ngOnInit(): void {\n    this.getCourses();\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      this._router.navigate(['/']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"NASTAVNIK\") {\n      this._router.navigate(['/teacher-page']);\n    } else if (JSON.parse(localStorage.getItem('user')).authority.name == \"STUDENT\") {\n      this._router.navigate(['/student-page']);\n    }\n  }\n\n  getCourses() {\n    this._courseService.getCourses().then(courses =>\n      this.courses = courses);\n  }\n\n  deleteCourses(course: Course): void {\n    this._courseService.deleteCourse(course.id).then(\n      () => this.getCourses()\n    );\n  }\n  updateCourse(course){\n    this._courseService.setter(course);\n    this._router.navigate(['/course-form']);\n\n  }\n  newCourse(){\n    let course = new Course({ \n      name: '',  \n    });\n    this._courseService.setter(course);\n    this._router.navigate(['/course-form']);\n  }\n}\n","<div class=\"container\">\n    <table class=\"table table-striped\">\n        <thead>\n            <th>Naziv</th>\n            <th></th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let course of courses\">\n                <td>{{course.name}}</td>\n                <td><button (click)=\"deleteCourses(course)\" class=\"btn btn-danger\">Obriši</button></td>\n                <td><button (click)=\"updateCourse(course)\" class=\"btn btn-primary\">Izmeni</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <button class=\"btn btn-success\" (click)=\"newCourse()\">Novi kurs</button>\n    </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Course implements CourseInterface{\npublic id: number;\npublic name: string;\nconstructor(courseCfg: CourseInterface)\n{\nthis.id = courseCfg.id;\nthis.name = courseCfg.name;\n}\n\n}\n\ninterface CourseInterface{\nid?: number;\nname: string;\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}